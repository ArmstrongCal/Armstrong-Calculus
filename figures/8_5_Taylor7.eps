%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, November 3, 2012 2:59:52 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
3.00000 w
0.772549 0.247059 0.894118 RG
2.00000 -3.00000 386.995 393.697 rc
newpath
5.00000 -10.3170 m
6.99786 3.70724 l
8.73619 15.0835 l
10.6911 27.0235 l
12.6590 38.1948 l
14.6175 48.5316 l
16.4333 57.4708 l
18.3135 66.1224 l
20.2580 74.4721 l
22.1962 82.2378 l
24.1900 89.6927 l
25.9460 95.8473 l
27.9229 102.352 l
29.9080 108.471 l
31.8209 114.010 l
33.5581 118.762 l
35.6237 124.098 l
37.3736 128.374 l
39.4091 133.093 l
41.2108 137.061 l
43.1876 141.211 l
45.0701 144.982 l
47.0341 148.748 l
48.8378 152.067 l
50.7833 155.513 l
52.8041 158.959 l
54.5632 161.859 l
56.4631 164.894 l
58.4258 167.936 l
60.3460 170.825 l
62.2039 173.547 l
64.2668 176.492 l
66.1204 179.072 l
68.0995 181.763 l
69.8928 184.147 l
71.8534 186.698 l
73.6982 189.046 l
75.6265 191.450 l
77.5118 193.749 l
79.4855 196.102 l
81.3864 198.318 l
83.3304 200.531 l
85.2583 202.672 l
87.0298 204.591 l
89.0602 206.733 l
90.8761 208.594 l
92.8123 210.520 l
94.6655 212.306 l
96.7233 214.219 l
98.5051 215.815 l
100.527 217.554 l
102.370 219.072 l
104.387 220.654 l
106.126 221.953 l
108.107 223.354 l
110.021 224.625 l
111.934 225.814 l
113.839 226.915 l
115.670 227.891 l
117.649 228.856 l
119.535 229.685 l
121.520 230.462 l
123.317 231.078 l
125.302 231.661 l
127.205 232.123 l
129.102 232.489 l
131.084 232.768 l
132.909 232.933 l
134.779 233.008 l
136.843 232.982 l
138.712 232.860 l
140.623 232.638 l
142.567 232.313 l
144.354 231.926 l
146.258 231.423 l
148.148 230.831 l
150.170 230.097 l
151.954 229.366 l
154.013 228.427 l
155.871 227.493 l
157.709 226.491 l
159.685 225.330 l
161.670 224.080 l
163.475 222.872 l
165.393 221.519 l
167.264 220.131 l
169.292 218.557 l
171.048 217.139 l
173.063 215.450 l
174.958 213.809 l
176.835 212.135 l
178.713 210.417 l
180.629 208.624 l
182.660 206.684 l
184.522 204.874 l
186.359 203.063 l
188.324 201.104 l
190.284 199.132 l
192.044 197.351 l
194.128 195.232 l
195.872 193.458 l
197.912 191.385 l
199.859 189.414 l
201.598 187.665 l
203.552 185.716 l
205.520 183.776 l
207.479 181.874 l
209.295 180.140 l
211.175 178.378 l
213.119 176.598 l
215.058 174.869 l
217.051 173.144 l
218.807 171.673 l
220.784 170.075 l
222.769 168.536 l
224.682 167.120 l
226.419 165.893 l
228.485 164.513 l
230.235 163.412 l
232.270 162.214 l
234.072 161.231 l
236.049 160.238 l
237.931 159.378 l
239.896 158.572 l
241.699 157.916 l
243.645 157.301 l
245.665 156.765 l
247.425 156.385 l
249.324 156.066 l
251.287 155.837 l
253.207 155.713 l
255.065 155.687 l
257.128 155.767 l
258.982 155.937 l
260.961 156.219 l
262.754 156.566 l
264.715 157.042 l
266.560 157.582 l
268.488 158.240 l
270.373 158.976 l
272.347 159.842 l
274.248 160.767 l
276.192 161.803 l
278.120 162.918 l
279.891 164.019 l
281.922 165.367 l
283.738 166.649 l
285.674 168.093 l
287.527 169.547 l
289.585 171.242 l
291.367 172.774 l
293.389 174.585 l
295.232 176.300 l
297.248 178.242 l
298.988 179.971 l
300.969 182.001 l
302.883 184.019 l
304.796 186.090 l
306.701 188.208 l
308.532 190.291 l
310.510 192.596 l
312.397 194.844 l
314.381 197.264 l
316.178 199.502 l
318.164 202.029 l
320.066 204.503 l
321.964 207.027 l
323.946 209.724 l
325.771 212.267 l
327.641 214.933 l
329.705 217.955 l
331.574 220.769 l
333.485 223.730 l
335.429 226.834 l
337.216 229.780 l
339.120 233.025 l
341.010 236.366 l
343.032 240.084 l
344.816 243.503 l
346.875 247.625 l
348.732 251.525 l
350.570 255.570 l
352.547 260.146 l
354.531 265.002 l
356.337 269.671 l
358.254 274.914 l
360.126 280.343 l
362.154 286.608 l
363.909 292.378 l
365.925 299.441 l
367.820 306.545 l
369.697 314.061 l
371.575 322.105 l
373.491 330.892 l
375.521 340.903 l
377.383 350.764 l
379.221 361.190 l
381.186 373.155 l
383.146 386.004 l
384.995 399.014 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
1.00000 -4.00000 388.995 395.697 rc
newpath
5.00000 157.267 m
6.99786 156.742 l
8.73619 156.369 l
10.6911 156.045 l
12.6590 155.822 l
14.6175 155.702 l
16.4333 155.682 l
18.3135 155.755 l
20.2580 155.929 l
22.1962 156.203 l
24.1900 156.589 l
25.9460 157.015 l
27.9229 157.589 l
29.9080 158.266 l
31.8209 159.011 l
33.5581 159.766 l
35.6237 160.757 l
37.3736 161.675 l
39.4091 162.829 l
41.2108 163.926 l
43.1876 165.209 l
45.0701 166.503 l
47.0341 167.927 l
48.8378 169.296 l
50.7833 170.836 l
52.8041 172.502 l
54.5632 174.001 l
56.4631 175.670 l
58.4258 177.443 l
60.3460 179.222 l
62.2039 180.979 l
64.2668 182.968 l
66.1204 184.783 l
68.0995 186.747 l
69.8928 188.544 l
71.8534 190.523 l
73.6982 192.395 l
77.5118 196.274 l
79.4855 198.277 l
81.3864 200.196 l
83.3304 202.143 l
85.2583 204.053 l
87.0298 205.787 l
89.0602 207.744 l
90.8761 209.461 l
92.8123 211.255 l
94.6655 212.930 l
96.7233 214.738 l
98.5051 216.256 l
100.527 217.920 l
102.370 219.379 l
104.387 220.907 l
106.126 222.165 l
108.107 223.527 l
110.021 224.768 l
111.934 225.930 l
113.839 227.009 l
115.670 227.968 l
117.649 228.917 l
119.535 229.735 l
121.520 230.501 l
123.317 231.109 l
125.302 231.686 l
127.205 232.142 l
129.102 232.504 l
131.084 232.780 l
132.909 232.941 l
134.779 233.015 l
136.843 232.987 l
138.712 232.863 l
140.623 232.641 l
142.567 232.315 l
144.354 231.928 l
146.258 231.424 l
148.148 230.831 l
150.170 230.098 l
151.954 229.367 l
154.013 228.427 l
155.871 227.493 l
157.709 226.491 l
159.685 225.330 l
161.670 224.080 l
163.475 222.872 l
165.393 221.519 l
167.264 220.131 l
169.292 218.557 l
171.048 217.139 l
173.063 215.450 l
174.958 213.809 l
176.835 212.135 l
178.713 210.417 l
180.629 208.624 l
182.660 206.684 l
184.522 204.874 l
186.359 203.063 l
188.324 201.104 l
190.284 199.132 l
192.044 197.351 l
194.128 195.232 l
195.872 193.458 l
197.912 191.385 l
199.859 189.414 l
201.598 187.665 l
203.552 185.716 l
205.520 183.776 l
207.479 181.874 l
209.295 180.140 l
211.175 178.378 l
213.119 176.598 l
215.058 174.869 l
217.051 173.144 l
218.807 171.673 l
220.784 170.075 l
222.769 168.536 l
224.682 167.120 l
226.419 165.893 l
228.485 164.513 l
230.235 163.412 l
232.270 162.214 l
234.072 161.231 l
236.049 160.237 l
237.931 159.377 l
239.896 158.571 l
241.699 157.915 l
243.645 157.300 l
245.665 156.763 l
247.425 156.383 l
249.324 156.063 l
251.287 155.833 l
253.207 155.708 l
255.065 155.681 l
257.128 155.759 l
258.982 155.925 l
260.961 156.205 l
262.754 156.547 l
264.715 157.017 l
266.560 157.551 l
268.488 158.201 l
270.373 158.927 l
272.347 159.780 l
274.248 160.690 l
276.192 161.708 l
278.120 162.801 l
279.891 163.878 l
281.922 165.193 l
283.738 166.440 l
285.674 167.839 l
287.527 169.243 l
289.585 170.872 l
291.367 172.338 l
293.389 174.061 l
295.232 175.681 l
297.248 177.503 l
298.988 179.114 l
300.969 180.986 l
302.883 182.830 l
304.796 184.702 l
306.701 186.591 l
308.532 188.424 l
310.510 190.422 l
312.397 192.335 l
316.178 196.182 l
318.164 198.197 l
320.066 200.118 l
321.964 202.019 l
323.946 203.984 l
325.771 205.772 l
327.641 207.575 l
329.705 209.528 l
331.574 211.258 l
333.485 212.985 l
335.429 214.693 l
337.216 216.217 l
339.120 217.787 l
341.010 219.287 l
343.032 220.823 l
344.816 222.117 l
346.875 223.534 l
348.732 224.738 l
350.570 225.859 l
352.547 226.982 l
354.531 228.020 l
356.337 228.886 l
358.254 229.719 l
360.126 230.445 l
362.154 231.134 l
363.909 231.645 l
365.925 232.134 l
367.820 232.497 l
369.697 232.763 l
371.575 232.935 l
373.491 233.014 l
375.521 232.990 l
377.383 232.871 l
379.221 232.663 l
381.186 232.341 l
383.146 231.919 l
384.995 231.430 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
5.00000 194.348 m
384.995 194.348 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 215 13 15 rc
newpath
289.250 221.250 m
289.458 221.468 289.614 221.692 289.718 221.921  c
289.802 222.067 289.927 222.463 290.093 223.109  c
290.656 222.281 l
290.802 222.072 290.981 221.877 291.195 221.695  c
291.408 221.513 291.593 221.385 291.750 221.312  c
291.854 221.270 291.968 221.250 292.093 221.250  c
292.270 221.250 292.414 221.299 292.523 221.398  c
292.632 221.497 292.687 221.614 292.687 221.750  c
292.687 221.916 292.656 222.031 292.593 222.093  c
292.479 222.197 292.343 222.250 292.187 222.250  c
292.093 222.250 292.000 222.229 291.906 222.187  c
291.708 222.125 291.572 222.093 291.500 222.093  c
291.395 222.093 291.276 222.151 291.140 222.265  c
290.880 222.484 290.567 222.911 290.203 223.546  c
290.718 225.718 l
290.802 226.052 290.869 226.252 290.921 226.320  c
290.974 226.388 291.031 226.421 291.093 226.421  c
291.177 226.421 291.281 226.375 291.406 226.281  c
291.635 226.083 291.833 225.828 292.000 225.515  c
292.218 225.625 l
291.947 226.125 291.609 226.541 291.203 226.875  c
290.974 227.062 290.776 227.156 290.609 227.156  c
290.369 227.156 290.182 227.020 290.046 226.750  c
289.953 226.583 289.770 225.875 289.500 224.625  c
288.833 225.770 288.302 226.505 287.906 226.828  c
287.645 227.046 287.395 227.156 287.156 227.156  c
286.989 227.156 286.833 227.093 286.687 226.968  c
286.593 226.875 286.546 226.750 286.546 226.593  c
286.546 226.458 286.593 226.343 286.687 226.250  c
286.781 226.156 286.895 226.109 287.031 226.109  c
287.166 226.109 287.307 226.177 287.453 226.312  c
287.567 226.406 287.656 226.453 287.718 226.453  c
287.760 226.453 287.822 226.421 287.906 226.359  c
288.104 226.192 288.375 225.843 288.718 225.312  c
289.062 224.781 289.286 224.395 289.390 224.156  c
289.130 223.125 288.989 222.583 288.968 222.531  c
288.875 222.250 288.750 222.052 288.593 221.937  c
288.437 221.822 288.203 221.765 287.890 221.765  c
287.796 221.765 287.687 221.770 287.562 221.781  c
287.562 221.546 l
289.250 221.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
42.9995 194.348 m
42.9995 198.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
40 206 6 13 rc
newpath
50.7968 213.437 m
42.2031 213.437 l
42.2031 212.765 l
50.7968 212.765 l
50.7968 213.437 l
h
f
Q
newpath
54.0468 213.828 m
54.0468 214.734 l
52.8906 214.734 l
52.8906 217.000 l
51.8437 217.000 l
51.8437 214.734 l
48.2031 214.734 l
48.2031 213.921 l
52.2031 208.218 l
52.8906 208.218 l
52.8906 213.828 l
54.0468 213.828 l
h
51.8437 213.828 m
51.8437 209.546 l
48.8281 213.828 l
51.8437 213.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
118.998 194.348 m
118.998 198.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
116 206 6 13 rc
newpath
126.796 213.437 m
118.203 213.437 l
118.203 212.765 l
126.796 212.765 l
126.796 213.437 l
h
f
Q
newpath
129.953 215.343 m
129.359 217.000 l
124.281 217.000 l
124.281 216.765 l
125.770 215.401 126.820 214.286 127.429 213.421  c
128.039 212.557 128.343 211.770 128.343 211.062  c
128.343 210.510 128.177 210.059 127.843 209.710  c
127.510 209.362 127.109 209.187 126.640 209.187  c
126.224 209.187 125.846 209.309 125.507 209.554  c
125.169 209.799 124.921 210.161 124.765 210.640  c
124.531 210.640 l
124.635 209.859 124.906 209.260 125.343 208.843  c
125.781 208.427 126.328 208.218 126.984 208.218  c
127.682 208.218 128.265 208.442 128.734 208.890  c
129.203 209.338 129.437 209.864 129.437 210.468  c
129.437 210.906 129.333 211.343 129.125 211.781  c
128.812 212.468 128.307 213.192 127.609 213.953  c
126.557 215.109 125.895 215.807 125.625 216.046  c
127.875 216.046 l
128.333 216.046 128.653 216.028 128.835 215.992  c
129.018 215.955 129.184 215.885 129.335 215.781  c
129.487 215.677 129.614 215.531 129.718 215.343  c
129.953 215.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 194.348 m
194.997 198.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.468 210.750 m
191.468 209.770 191.617 208.924 191.914 208.210  c
192.210 207.497 192.604 206.968 193.093 206.625  c
193.479 206.354 193.875 206.218 194.281 206.218  c
194.937 206.218 195.526 206.552 196.046 207.218  c
196.703 208.052 197.031 209.182 197.031 210.609  c
197.031 211.609 196.888 212.458 196.601 213.156  c
196.315 213.854 195.947 214.362 195.500 214.679  c
195.052 214.997 194.625 215.156 194.218 215.156  c
193.395 215.156 192.708 214.671 192.156 213.703  c
191.697 212.880 191.468 211.895 191.468 210.750  c
h
192.718 210.906 m
192.718 212.093 192.864 213.062 193.156 213.812  c
193.395 214.437 193.755 214.750 194.234 214.750  c
194.463 214.750 194.700 214.648 194.945 214.445  c
195.190 214.242 195.375 213.895 195.500 213.406  c
195.697 212.687 195.796 211.661 195.796 210.328  c
195.796 209.349 195.692 208.531 195.484 207.875  c
195.338 207.385 195.140 207.041 194.890 206.843  c
194.724 206.708 194.515 206.640 194.265 206.640  c
193.984 206.640 193.729 206.765 193.500 207.015  c
193.197 207.369 192.992 207.924 192.882 208.679  c
192.773 209.434 192.718 210.177 192.718 210.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
270.996 194.348 m
270.996 198.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
277.953 215.343 m
277.359 217.000 l
272.281 217.000 l
272.281 216.765 l
273.770 215.401 274.820 214.286 275.429 213.421  c
276.039 212.557 276.343 211.770 276.343 211.062  c
276.343 210.510 276.177 210.059 275.843 209.710  c
275.510 209.362 275.109 209.187 274.640 209.187  c
274.224 209.187 273.846 209.309 273.507 209.554  c
273.169 209.799 272.921 210.161 272.765 210.640  c
272.531 210.640 l
272.635 209.859 272.906 209.260 273.343 208.843  c
273.781 208.427 274.328 208.218 274.984 208.218  c
275.682 208.218 276.265 208.442 276.734 208.890  c
277.203 209.338 277.437 209.864 277.437 210.468  c
277.437 210.906 277.333 211.343 277.125 211.781  c
276.812 212.468 276.307 213.192 275.609 213.953  c
274.557 215.109 273.895 215.807 273.625 216.046  c
275.875 216.046 l
276.333 216.046 276.653 216.028 276.835 215.992  c
277.018 215.955 277.184 215.885 277.335 215.781  c
277.487 215.677 277.614 215.531 277.718 215.343  c
277.953 215.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
346.995 194.348 m
346.995 198.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
354.046 213.828 m
354.046 214.734 l
352.890 214.734 l
352.890 217.000 l
351.843 217.000 l
351.843 214.734 l
348.203 214.734 l
348.203 213.921 l
352.203 208.218 l
352.890 208.218 l
352.890 213.828 l
354.046 213.828 l
h
351.843 213.828 m
351.843 209.546 l
348.828 213.828 l
351.843 213.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
5.00000 194.348 m
5.00000 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
80.9990 194.348 m
80.9990 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
156.998 194.348 m
156.998 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
232.997 194.348 m
232.997 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
308.996 194.348 m
308.996 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
384.995 194.348 m
384.995 196.348 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
194.997 387.697 m
194.997 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
157 90 13 15 rc
newpath
163.078 96.2500 m
163.224 96.5000 163.322 96.7317 163.375 96.9453  c
163.427 97.1588 163.484 97.5781 163.546 98.2031  c
163.812 101.328 l
164.072 101.026 164.442 100.541 164.921 99.8750  c
165.151 99.5520 165.437 99.1145 165.781 98.5625  c
165.989 98.2291 166.119 97.9947 166.171 97.8593  c
166.192 97.7864 166.203 97.7135 166.203 97.6406  c
166.203 97.5989 166.187 97.5625 166.156 97.5312  c
166.125 97.5000 166.046 97.4635 165.921 97.4218  c
165.796 97.3802 165.695 97.3072 165.617 97.2031  c
165.539 97.0989 165.500 96.9739 165.500 96.8281  c
165.500 96.6614 165.549 96.5234 165.648 96.4140  c
165.747 96.3046 165.875 96.2500 166.031 96.2500  c
166.218 96.2500 166.377 96.3281 166.507 96.4843  c
166.638 96.6406 166.703 96.8541 166.703 97.1250  c
166.703 97.4583 166.588 97.8411 166.359 98.2734  c
166.130 98.7057 165.690 99.3645 165.039 100.250  c
164.388 101.135 163.599 102.104 162.671 103.156  c
162.036 103.875 161.562 104.330 161.250 104.523  c
160.937 104.716 160.671 104.812 160.453 104.812  c
160.317 104.812 160.200 104.760 160.101 104.656  c
160.002 104.552 159.953 104.437 159.953 104.312  c
159.953 104.145 160.023 103.994 160.164 103.859  c
160.304 103.724 160.453 103.656 160.609 103.656  c
160.692 103.656 160.765 103.677 160.828 103.718  c
160.859 103.739 160.895 103.799 160.937 103.898  c
160.979 103.997 161.015 104.062 161.046 104.093  c
161.067 104.114 161.093 104.125 161.125 104.125  c
161.145 104.125 161.187 104.104 161.250 104.062  c
161.489 103.916 161.760 103.687 162.062 103.375  c
162.468 102.958 162.770 102.619 162.968 102.359  c
162.609 98.3437 l
162.557 97.6770 162.471 97.2708 162.351 97.1250  c
162.231 96.9791 162.031 96.9062 161.750 96.9062  c
161.656 96.9062 161.494 96.9218 161.265 96.9531  c
161.218 96.7187 l
163.078 96.2500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
194.997 349.028 m
190.997 349.028 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 348 6 13 rc
newpath
188.796 355.437 m
180.203 355.437 l
180.203 354.765 l
188.796 354.765 l
188.796 355.437 l
h
f
Q
newpath
192.046 355.828 m
192.046 356.734 l
190.890 356.734 l
190.890 359.000 l
189.843 359.000 l
189.843 356.734 l
186.203 356.734 l
186.203 355.921 l
190.203 350.218 l
190.890 350.218 l
190.890 355.828 l
192.046 355.828 l
h
189.843 355.828 m
189.843 351.546 l
186.828 355.828 l
189.843 355.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 271.688 m
190.997 271.688 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 270 6 13 rc
newpath
188.796 277.437 m
180.203 277.437 l
180.203 276.765 l
188.796 276.765 l
188.796 277.437 l
h
f
Q
newpath
191.953 279.343 m
191.359 281.000 l
186.281 281.000 l
186.281 280.765 l
187.770 279.401 188.820 278.286 189.429 277.421  c
190.039 276.557 190.343 275.770 190.343 275.062  c
190.343 274.510 190.177 274.059 189.843 273.710  c
189.510 273.362 189.109 273.187 188.640 273.187  c
188.224 273.187 187.846 273.309 187.507 273.554  c
187.169 273.799 186.921 274.161 186.765 274.640  c
186.531 274.640 l
186.635 273.859 186.906 273.260 187.343 272.843  c
187.781 272.427 188.328 272.218 188.984 272.218  c
189.682 272.218 190.265 272.442 190.734 272.890  c
191.203 273.338 191.437 273.864 191.437 274.468  c
191.437 274.906 191.333 275.343 191.125 275.781  c
190.812 276.468 190.307 277.192 189.609 277.953  c
188.557 279.109 187.895 279.807 187.625 280.046  c
189.875 280.046 l
190.333 280.046 190.653 280.028 190.835 279.992  c
191.018 279.955 191.184 279.885 191.335 279.781  c
191.487 279.677 191.614 279.531 191.718 279.343  c
191.953 279.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 194.348 m
190.997 194.348 l
S
Q
q
0 w
newpath
194.997 117.009 m
190.997 117.009 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.953 125.343 m
191.359 127.000 l
186.281 127.000 l
186.281 126.765 l
187.770 125.401 188.820 124.286 189.429 123.421  c
190.039 122.557 190.343 121.770 190.343 121.062  c
190.343 120.510 190.177 120.059 189.843 119.710  c
189.510 119.362 189.109 119.187 188.640 119.187  c
188.224 119.187 187.846 119.309 187.507 119.554  c
187.169 119.799 186.921 120.161 186.765 120.640  c
186.531 120.640 l
186.635 119.859 186.906 119.260 187.343 118.843  c
187.781 118.427 188.328 118.218 188.984 118.218  c
189.682 118.218 190.265 118.442 190.734 118.890  c
191.203 119.338 191.437 119.864 191.437 120.468  c
191.437 120.906 191.333 121.343 191.125 121.781  c
190.812 122.468 190.307 123.192 189.609 123.953  c
188.557 125.109 187.895 125.807 187.625 126.046  c
189.875 126.046 l
190.333 126.046 190.653 126.028 190.835 125.992  c
191.018 125.955 191.184 125.885 191.335 125.781  c
191.487 125.677 191.614 125.531 191.718 125.343  c
191.953 125.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 39.6698 m
190.997 39.6698 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
192.046 45.8281 m
192.046 46.7343 l
190.890 46.7343 l
190.890 49.0000 l
189.843 49.0000 l
189.843 46.7343 l
186.203 46.7343 l
186.203 45.9218 l
190.203 40.2187 l
190.890 40.2187 l
190.890 45.8281 l
192.046 45.8281 l
h
189.843 45.8281 m
189.843 41.5468 l
186.828 45.8281 l
189.843 45.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 387.697 m
192.997 387.697 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 310.358 m
192.997 310.358 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 233.018 m
192.997 233.018 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 155.679 m
192.997 155.679 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 78.3395 m
192.997 78.3395 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.997 1.00000 m
192.997 1.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
