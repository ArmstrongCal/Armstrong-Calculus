%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, November 24, 2012 7:28:19 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
3.00000 w
0 1.00000 0 RG
8.50000 4.01542 384.500 387.635 rc
newpath
11.5000 325.846 m
14.0888 287.576 l
16.3413 262.549 l
18.8744 241.350 l
21.4244 225.620 l
23.9622 214.123 l
26.3151 206.229 l
28.7514 200.152 l
31.2711 195.543 l
33.7826 192.203 l
36.3660 189.722 l
38.6415 188.129 l
41.2032 186.821 l
43.7754 185.886 l
46.2541 185.245 l
48.5051 184.822 l
51.1817 184.463 l
53.4491 184.248 l
56.0867 184.070 l
58.4214 183.960 l
60.9829 183.875 l
63.4221 183.818 l
65.9672 183.778 l
68.3043 183.752 l
70.8252 183.732 l
73.4437 183.719 l
75.7232 183.711 l
78.1850 183.705 l
80.7283 183.701 l
83.2165 183.698 l
85.6239 183.696 l
88.2969 183.695 l
90.6988 183.694 l
93.2632 183.694 l
95.5870 183.694 l
98.1275 183.693 l
100.518 183.693 l
103.016 183.693 l
105.459 183.693 l
108.017 183.693 l
110.480 183.693 l
112.999 183.693 l
115.497 183.693 l
117.792 183.693 l
120.423 183.693 l
122.776 183.693 l
125.285 183.693 l
127.687 183.693 l
130.353 183.693 l
132.662 183.693 l
135.283 183.693 l
137.671 183.693 l
140.284 183.693 l
142.538 183.693 l
145.105 183.693 l
147.585 183.693 l
150.063 183.693 l
152.532 183.692 l
154.904 183.692 l
157.468 183.692 l
159.912 183.692 l
162.484 183.692 l
164.813 183.692 l
167.386 183.692 l
169.851 183.692 l
172.310 183.691 l
174.878 183.691 l
177.243 183.691 l
179.666 183.690 l
182.340 183.690 l
184.762 183.690 l
187.239 183.689 l
189.757 183.688 l
192.072 183.688 l
194.540 183.687 l
196.989 183.686 l
199.609 183.684 l
201.921 183.683 l
204.589 183.681 l
206.996 183.680 l
209.377 183.678 l
211.938 183.675 l
214.510 183.672 l
216.850 183.669 l
219.334 183.665 l
221.759 183.660 l
224.387 183.654 l
226.662 183.649 l
229.274 183.641 l
231.729 183.633 l
234.161 183.623 l
236.595 183.612 l
239.077 183.599 l
241.709 183.582 l
244.121 183.565 l
246.503 183.545 l
249.048 183.520 l
251.589 183.491 l
253.869 183.461 l
256.570 183.420 l
258.830 183.379 l
261.473 183.324 l
263.995 183.263 l
266.248 183.200 l
268.781 183.118 l
271.331 183.021 l
273.869 182.909 l
276.222 182.788 l
278.658 182.643 l
281.178 182.469 l
283.689 182.266 l
286.273 182.023 l
288.548 181.775 l
291.110 181.450 l
293.682 181.070 l
296.161 180.642 l
298.412 180.194 l
301.088 179.574 l
303.356 178.964 l
305.993 178.140 l
308.328 177.291 l
310.890 176.209 l
313.329 175.010 l
315.874 173.554 l
318.211 172.002 l
320.732 170.062 l
323.350 167.704 l
325.630 165.322 l
328.092 162.349 l
330.635 158.771 l
333.123 154.692 l
335.531 150.110 l
338.204 144.170 l
340.606 137.942 l
343.170 130.205 l
345.494 122.070 l
348.034 111.753 l
350.425 100.475 l
352.923 86.7908 l
355.366 71.2391 l
357.924 52.2773 l
360.387 30.9982 l
362.906 5.66964 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
0 0 1.00000 RG
8.50000 4.01542 384.500 387.635 rc
newpath
63.4221 406.583 m
65.9672 355.743 l
68.3043 318.920 l
70.8252 287.630 l
73.4437 262.469 l
75.7232 245.379 l
78.1850 230.894 l
80.7283 219.352 l
83.2165 210.689 l
85.6239 204.237 l
88.2969 198.794 l
90.6988 195.096 l
93.2632 192.104 l
95.5870 190.050 l
98.1275 188.352 l
100.518 187.155 l
103.016 186.218 l
105.459 185.539 l
108.017 185.015 l
110.480 184.647 l
112.999 184.372 l
115.497 184.175 l
117.792 184.042 l
120.423 183.933 l
122.776 183.864 l
125.285 183.811 l
127.687 183.775 l
130.353 183.748 l
132.662 183.731 l
135.283 183.718 l
137.671 183.710 l
140.284 183.704 l
142.538 183.700 l
145.105 183.697 l
147.585 183.696 l
150.063 183.695 l
152.532 183.694 l
154.904 183.693 l
157.468 183.693 l
159.912 183.692 l
162.484 183.692 l
164.813 183.692 l
167.386 183.692 l
169.851 183.692 l
172.310 183.691 l
174.878 183.691 l
177.243 183.691 l
179.666 183.690 l
182.340 183.690 l
184.762 183.690 l
187.239 183.689 l
189.757 183.688 l
192.072 183.688 l
194.540 183.687 l
196.989 183.686 l
199.609 183.684 l
201.921 183.683 l
204.589 183.681 l
206.996 183.680 l
209.377 183.678 l
211.938 183.675 l
214.510 183.672 l
216.850 183.669 l
219.334 183.665 l
221.759 183.660 l
224.387 183.654 l
226.662 183.649 l
229.274 183.641 l
231.729 183.633 l
234.161 183.623 l
236.595 183.612 l
239.077 183.599 l
241.709 183.582 l
244.121 183.565 l
246.503 183.545 l
249.048 183.520 l
251.589 183.491 l
253.869 183.461 l
256.570 183.420 l
258.830 183.379 l
261.473 183.324 l
263.995 183.263 l
266.248 183.200 l
268.781 183.118 l
271.331 183.021 l
273.869 182.909 l
276.222 182.788 l
278.658 182.643 l
281.178 182.469 l
283.689 182.266 l
286.273 182.023 l
288.548 181.775 l
291.110 181.450 l
293.682 181.070 l
296.161 180.642 l
298.412 180.194 l
301.088 179.574 l
303.356 178.964 l
305.993 178.140 l
308.328 177.291 l
310.890 176.209 l
313.329 175.010 l
315.874 173.554 l
318.211 172.002 l
320.732 170.062 l
323.350 167.704 l
325.630 165.322 l
328.092 162.349 l
330.635 158.771 l
333.123 154.692 l
335.531 150.110 l
338.204 144.170 l
340.606 137.942 l
343.170 130.205 l
345.494 122.070 l
348.034 111.754 l
350.425 100.475 l
352.923 86.7911 l
355.366 71.2396 l
357.924 52.2782 l
360.387 30.9996 l
362.906 5.67199 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
8.50000 4.01542 384.500 387.635 rc
newpath
11.5000 183.693 m
100.518 183.693 l
103.016 183.693 l
112.999 183.693 l
115.497 183.693 l
117.792 183.693 l
120.423 183.693 l
122.776 183.693 l
125.285 183.693 l
127.687 183.693 l
130.353 183.693 l
132.662 183.693 l
135.283 183.693 l
137.671 183.693 l
140.284 183.693 l
142.538 183.693 l
145.105 183.693 l
147.585 183.693 l
150.063 183.693 l
152.532 183.692 l
154.904 183.692 l
157.468 183.692 l
159.912 183.692 l
162.484 183.692 l
164.813 183.692 l
167.386 183.692 l
169.851 183.692 l
172.310 183.691 l
174.878 183.691 l
177.243 183.691 l
179.666 183.690 l
182.340 183.690 l
184.762 183.690 l
187.239 183.689 l
189.757 183.688 l
192.072 183.688 l
194.540 183.687 l
196.989 183.686 l
199.609 183.684 l
201.921 183.683 l
204.589 183.681 l
206.996 183.680 l
209.377 183.678 l
211.938 183.675 l
214.510 183.672 l
216.850 183.669 l
219.334 183.665 l
221.759 183.660 l
224.387 183.654 l
226.662 183.649 l
229.274 183.641 l
231.729 183.633 l
234.161 183.623 l
236.595 183.612 l
239.077 183.599 l
241.709 183.582 l
244.121 183.565 l
246.503 183.545 l
249.048 183.520 l
251.589 183.491 l
253.869 183.461 l
256.570 183.420 l
258.830 183.379 l
261.473 183.324 l
263.995 183.263 l
266.248 183.200 l
268.781 183.118 l
271.331 183.021 l
273.869 182.909 l
276.222 182.788 l
278.658 182.643 l
281.178 182.469 l
283.689 182.266 l
286.273 182.023 l
288.548 181.775 l
291.110 181.450 l
293.682 181.070 l
296.161 180.642 l
298.412 180.194 l
301.088 179.574 l
303.356 178.964 l
305.993 178.140 l
308.328 177.291 l
310.890 176.209 l
313.329 175.010 l
315.874 173.554 l
318.211 172.002 l
320.732 170.062 l
323.350 167.704 l
325.630 165.322 l
328.092 162.349 l
330.635 158.771 l
333.123 154.692 l
335.531 150.110 l
338.204 144.170 l
340.606 137.942 l
343.170 130.205 l
345.494 122.070 l
348.034 111.753 l
350.425 100.475 l
352.923 86.7908 l
355.366 71.2391 l
357.924 52.2773 l
360.387 30.9982 l
362.906 5.66964 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 1.00000 RG
8.50000 4.01542 384.500 387.635 rc
newpath
103.016 419.107 m
105.459 386.007 l
108.017 355.863 l
110.480 330.687 l
112.999 308.390 l
115.497 289.309 l
117.792 274.120 l
120.423 259.133 l
122.776 247.650 l
125.285 237.149 l
127.687 228.569 l
130.353 220.501 l
132.662 214.588 l
135.283 208.917 l
137.671 204.578 l
140.284 200.606 l
142.538 197.737 l
145.105 195.004 l
147.585 192.827 l
150.063 191.032 l
152.532 189.565 l
154.904 188.408 l
157.468 187.390 l
159.912 186.607 l
162.484 185.947 l
164.813 185.468 l
167.386 185.046 l
169.851 184.728 l
172.310 184.479 l
174.878 184.278 l
177.243 184.134 l
179.666 184.020 l
182.340 183.925 l
184.762 183.861 l
187.239 183.811 l
189.757 183.774 l
192.072 183.749 l
194.540 183.729 l
196.989 183.714 l
199.609 183.703 l
201.921 183.696 l
204.589 183.689 l
206.996 183.685 l
209.377 183.681 l
211.938 183.677 l
214.510 183.673 l
216.850 183.669 l
219.334 183.665 l
221.759 183.660 l
224.387 183.655 l
226.662 183.649 l
229.274 183.641 l
231.729 183.633 l
234.161 183.623 l
236.595 183.612 l
239.077 183.599 l
241.709 183.582 l
244.121 183.565 l
246.503 183.545 l
249.048 183.520 l
251.589 183.491 l
253.869 183.461 l
256.570 183.420 l
258.830 183.379 l
261.473 183.324 l
263.995 183.263 l
266.248 183.200 l
268.781 183.118 l
271.331 183.021 l
273.869 182.909 l
276.222 182.788 l
278.658 182.643 l
281.178 182.469 l
283.689 182.266 l
286.273 182.023 l
288.548 181.775 l
291.110 181.451 l
293.682 181.070 l
296.161 180.643 l
298.412 180.195 l
301.088 179.576 l
303.356 178.967 l
305.993 178.145 l
308.328 177.299 l
310.890 176.224 l
313.329 175.033 l
315.874 173.591 l
318.211 172.058 l
320.732 170.146 l
323.350 167.834 l
325.630 165.508 l
328.092 162.620 l
330.635 159.166 l
333.123 155.255 l
335.531 150.896 l
338.204 145.297 l
340.606 139.485 l
343.170 132.345 l
345.494 124.925 l
348.034 115.637 l
350.425 105.627 l
352.923 93.6676 l
355.366 80.3007 l
357.924 64.2967 l
360.387 46.6843 l
362.906 26.1501 l
365.404 2.94348 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
11.5000 183.693 m
389.000 183.693 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
128 205 13 15 rc
newpath
134.250 211.250 m
134.458 211.468 134.614 211.692 134.718 211.921  c
134.802 212.067 134.927 212.463 135.093 213.109  c
135.656 212.281 l
135.802 212.072 135.981 211.877 136.195 211.695  c
136.408 211.513 136.593 211.385 136.750 211.312  c
136.854 211.270 136.968 211.250 137.093 211.250  c
137.270 211.250 137.414 211.299 137.523 211.398  c
137.632 211.497 137.687 211.614 137.687 211.750  c
137.687 211.916 137.656 212.031 137.593 212.093  c
137.479 212.197 137.343 212.250 137.187 212.250  c
137.093 212.250 137.000 212.229 136.906 212.187  c
136.708 212.125 136.572 212.093 136.500 212.093  c
136.395 212.093 136.276 212.151 136.140 212.265  c
135.880 212.484 135.567 212.911 135.203 213.546  c
135.718 215.718 l
135.802 216.052 135.869 216.252 135.921 216.320  c
135.974 216.388 136.031 216.421 136.093 216.421  c
136.177 216.421 136.281 216.375 136.406 216.281  c
136.635 216.083 136.833 215.828 137.000 215.515  c
137.218 215.625 l
136.947 216.125 136.609 216.541 136.203 216.875  c
135.974 217.062 135.776 217.156 135.609 217.156  c
135.369 217.156 135.182 217.020 135.046 216.750  c
134.953 216.583 134.770 215.875 134.500 214.625  c
133.833 215.770 133.302 216.505 132.906 216.828  c
132.645 217.046 132.395 217.156 132.156 217.156  c
131.989 217.156 131.833 217.093 131.687 216.968  c
131.593 216.875 131.546 216.750 131.546 216.593  c
131.546 216.458 131.593 216.343 131.687 216.250  c
131.781 216.156 131.895 216.109 132.031 216.109  c
132.166 216.109 132.307 216.177 132.453 216.312  c
132.567 216.406 132.656 216.453 132.718 216.453  c
132.760 216.453 132.822 216.421 132.906 216.359  c
133.104 216.192 133.375 215.843 133.718 215.312  c
134.062 214.781 134.286 214.395 134.390 214.156  c
134.130 213.125 133.989 212.583 133.968 212.531  c
133.875 212.250 133.750 212.052 133.593 211.937  c
133.437 211.822 133.203 211.765 132.890 211.765  c
132.796 211.765 132.687 211.770 132.562 211.781  c
132.562 211.546 l
134.250 211.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
11.5000 183.693 m
11.5000 187.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 195 6 13 rc
newpath
16.7968 202.437 m
8.20312 202.437 l
8.20312 201.765 l
16.7968 201.765 l
16.7968 202.437 l
h
f
Q
newpath
15.5312 198.234 m
17.6250 197.218 l
17.8281 197.218 l
17.8281 204.484 l
17.8281 204.963 17.8489 205.263 17.8906 205.382  c
17.9322 205.502 18.0156 205.593 18.1406 205.656  c
18.2656 205.718 18.5208 205.755 18.9062 205.765  c
18.9062 206.000 l
15.6718 206.000 l
15.6718 205.765 l
16.0781 205.755 16.3411 205.718 16.4609 205.656  c
16.5807 205.593 16.6640 205.510 16.7109 205.406  c
16.7578 205.302 16.7812 204.994 16.7812 204.484  c
16.7812 199.843 l
16.7812 199.208 16.7604 198.802 16.7187 198.625  c
16.6875 198.489 16.6328 198.390 16.5546 198.328  c
16.4765 198.265 16.3802 198.234 16.2656 198.234  c
16.1093 198.234 15.8958 198.302 15.6250 198.437  c
15.5312 198.234 l
h
26.1406 197.390 m
25.6406 198.468 l
23.0625 198.468 l
22.5000 199.625 l
23.6145 199.791 24.5000 200.208 25.1562 200.875  c
25.7187 201.447 26.0000 202.125 26.0000 202.906  c
26.0000 203.364 25.9088 203.786 25.7265 204.171  c
25.5442 204.557 25.3125 204.885 25.0312 205.156  c
24.7500 205.427 24.4375 205.640 24.0937 205.796  c
23.6145 206.036 23.1145 206.156 22.5937 206.156  c
22.0833 206.156 21.7109 206.067 21.4765 205.890  c
21.2421 205.713 21.1250 205.520 21.1250 205.312  c
21.1250 205.187 21.1744 205.080 21.2734 204.992  c
21.3724 204.903 21.4947 204.859 21.6406 204.859  c
21.7447 204.859 21.8385 204.875 21.9218 204.906  c
22.0052 204.937 22.1458 205.026 22.3437 205.171  c
22.6666 205.390 22.9895 205.500 23.3125 205.500  c
23.8125 205.500 24.2474 205.312 24.6171 204.937  c
24.9869 204.562 25.1718 204.104 25.1718 203.562  c
25.1718 203.041 25.0052 202.557 24.6718 202.109  c
24.3385 201.661 23.8802 201.312 23.2968 201.062  c
22.8281 200.875 22.1979 200.765 21.4062 200.734  c
23.0625 197.390 l
26.1406 197.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
93.5652 183.693 m
93.5652 187.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
88 195 6 13 rc
newpath
98.7968 202.437 m
90.2031 202.437 l
90.2031 201.765 l
98.7968 201.765 l
98.7968 202.437 l
h
f
Q
newpath
97.5312 198.234 m
99.6250 197.218 l
99.8281 197.218 l
99.8281 204.484 l
99.8281 204.963 99.8489 205.263 99.8906 205.382  c
99.9322 205.502 100.015 205.593 100.140 205.656  c
100.265 205.718 100.520 205.755 100.906 205.765  c
100.906 206.000 l
97.6718 206.000 l
97.6718 205.765 l
98.0781 205.755 98.3411 205.718 98.4609 205.656  c
98.5807 205.593 98.6640 205.510 98.7109 205.406  c
98.7578 205.302 98.7812 204.994 98.7812 204.484  c
98.7812 199.843 l
98.7812 199.208 98.7604 198.802 98.7187 198.625  c
98.6875 198.489 98.6328 198.390 98.5546 198.328  c
98.4765 198.265 98.3802 198.234 98.2656 198.234  c
98.1093 198.234 97.8958 198.302 97.6250 198.437  c
97.5312 198.234 l
h
102.968 201.750 m
102.968 200.770 103.117 199.924 103.414 199.210  c
103.710 198.497 104.104 197.968 104.593 197.625  c
104.979 197.354 105.375 197.218 105.781 197.218  c
106.437 197.218 107.026 197.552 107.546 198.218  c
108.203 199.052 108.531 200.182 108.531 201.609  c
108.531 202.609 108.388 203.458 108.101 204.156  c
107.815 204.854 107.447 205.362 107.000 205.679  c
106.552 205.997 106.125 206.156 105.718 206.156  c
104.895 206.156 104.208 205.671 103.656 204.703  c
103.197 203.880 102.968 202.895 102.968 201.750  c
h
104.218 201.906 m
104.218 203.093 104.364 204.062 104.656 204.812  c
104.895 205.437 105.255 205.750 105.734 205.750  c
105.963 205.750 106.200 205.648 106.445 205.445  c
106.690 205.242 106.875 204.895 107.000 204.406  c
107.197 203.687 107.296 202.661 107.296 201.328  c
107.296 200.349 107.192 199.531 106.984 198.875  c
106.838 198.385 106.640 198.041 106.390 197.843  c
106.224 197.708 106.015 197.640 105.765 197.640  c
105.484 197.640 105.229 197.765 105.000 198.015  c
104.697 198.369 104.492 198.924 104.382 199.679  c
104.273 200.434 104.218 201.177 104.218 201.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
175.630 183.693 m
175.630 187.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
173 195 6 13 rc
newpath
183.796 202.437 m
175.203 202.437 l
175.203 201.765 l
183.796 201.765 l
183.796 202.437 l
h
f
Q
newpath
186.640 197.390 m
186.140 198.468 l
183.562 198.468 l
183.000 199.625 l
184.114 199.791 185.000 200.208 185.656 200.875  c
186.218 201.447 186.500 202.125 186.500 202.906  c
186.500 203.364 186.408 203.786 186.226 204.171  c
186.044 204.557 185.812 204.885 185.531 205.156  c
185.250 205.427 184.937 205.640 184.593 205.796  c
184.114 206.036 183.614 206.156 183.093 206.156  c
182.583 206.156 182.210 206.067 181.976 205.890  c
181.742 205.713 181.625 205.520 181.625 205.312  c
181.625 205.187 181.674 205.080 181.773 204.992  c
181.872 204.903 181.994 204.859 182.140 204.859  c
182.244 204.859 182.338 204.875 182.421 204.906  c
182.505 204.937 182.645 205.026 182.843 205.171  c
183.166 205.390 183.489 205.500 183.812 205.500  c
184.312 205.500 184.747 205.312 185.117 204.937  c
185.487 204.562 185.671 204.104 185.671 203.562  c
185.671 203.041 185.505 202.557 185.171 202.109  c
184.838 201.661 184.380 201.312 183.796 201.062  c
183.328 200.875 182.697 200.765 181.906 200.734  c
183.562 197.390 l
186.640 197.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 183.693 m
257.695 187.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
254.468 199.750 m
254.468 198.770 254.617 197.924 254.914 197.210  c
255.210 196.497 255.604 195.968 256.093 195.625  c
256.479 195.354 256.875 195.218 257.281 195.218  c
257.937 195.218 258.526 195.552 259.046 196.218  c
259.703 197.052 260.031 198.182 260.031 199.609  c
260.031 200.609 259.888 201.458 259.601 202.156  c
259.315 202.854 258.947 203.362 258.500 203.679  c
258.052 203.997 257.625 204.156 257.218 204.156  c
256.395 204.156 255.708 203.671 255.156 202.703  c
254.697 201.880 254.468 200.895 254.468 199.750  c
h
255.718 199.906 m
255.718 201.093 255.864 202.062 256.156 202.812  c
256.395 203.437 256.755 203.750 257.234 203.750  c
257.463 203.750 257.700 203.648 257.945 203.445  c
258.190 203.242 258.375 202.895 258.500 202.406  c
258.697 201.687 258.796 200.661 258.796 199.328  c
258.796 198.349 258.692 197.531 258.484 196.875  c
258.338 196.385 258.140 196.041 257.890 195.843  c
257.724 195.708 257.515 195.640 257.265 195.640  c
256.984 195.640 256.729 195.765 256.500 196.015  c
256.197 196.369 255.992 196.924 255.882 197.679  c
255.773 198.434 255.718 199.177 255.718 199.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
339.760 183.693 m
339.760 187.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
346.640 197.390 m
346.140 198.468 l
343.562 198.468 l
343.000 199.625 l
344.114 199.791 345.000 200.208 345.656 200.875  c
346.218 201.447 346.500 202.125 346.500 202.906  c
346.500 203.364 346.408 203.786 346.226 204.171  c
346.044 204.557 345.812 204.885 345.531 205.156  c
345.250 205.427 344.937 205.640 344.593 205.796  c
344.114 206.036 343.614 206.156 343.093 206.156  c
342.583 206.156 342.210 206.067 341.976 205.890  c
341.742 205.713 341.625 205.520 341.625 205.312  c
341.625 205.187 341.674 205.080 341.773 204.992  c
341.872 204.903 341.994 204.859 342.140 204.859  c
342.244 204.859 342.338 204.875 342.421 204.906  c
342.505 204.937 342.645 205.026 342.843 205.171  c
343.166 205.390 343.489 205.500 343.812 205.500  c
344.312 205.500 344.747 205.312 345.117 204.937  c
345.487 204.562 345.671 204.104 345.671 203.562  c
345.671 203.041 345.505 202.557 345.171 202.109  c
344.838 201.661 344.380 201.312 343.796 201.062  c
343.328 200.875 342.697 200.765 341.906 200.734  c
343.562 197.390 l
346.640 197.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
27.9130 183.693 m
27.9130 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.3260 183.693 m
44.3260 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
60.7391 183.693 m
60.7391 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
77.1521 183.693 m
77.1521 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
109.978 183.693 m
109.978 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
126.391 183.693 m
126.391 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
142.804 183.693 m
142.804 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
159.217 183.693 m
159.217 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
192.043 183.693 m
192.043 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
208.456 183.693 m
208.456 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
224.869 183.693 m
224.869 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
241.282 183.693 m
241.282 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
274.108 183.693 m
274.108 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
290.521 183.693 m
290.521 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
306.934 183.693 m
306.934 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.347 183.693 m
323.347 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
356.173 183.693 m
356.173 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
372.587 183.693 m
372.587 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
389.000 183.693 m
389.000 185.693 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
257.695 388.651 m
257.695 8.01541 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
211 88 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
257.695 359.371 m
253.695 359.371 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
228 358 6 13 rc
newpath
238.796 365.437 m
230.203 365.437 l
230.203 364.765 l
238.796 364.765 l
238.796 365.437 l
h
f
Q
newpath
241.828 360.218 m
241.828 360.453 l
241.265 360.505 240.807 360.614 240.453 360.781  c
240.099 360.947 239.750 361.203 239.406 361.546  c
239.062 361.890 238.778 362.273 238.554 362.695  c
238.330 363.117 238.140 363.614 237.984 364.187  c
238.599 363.770 239.213 363.562 239.828 363.562  c
240.411 363.562 240.919 363.799 241.351 364.273  c
241.783 364.747 242.000 365.359 242.000 366.109  c
242.000 366.828 241.781 367.484 241.343 368.078  c
240.822 368.796 240.130 369.156 239.265 369.156  c
238.671 369.156 238.171 368.958 237.765 368.562  c
236.963 367.812 236.562 366.833 236.562 365.625  c
236.562 364.854 236.716 364.122 237.023 363.429  c
237.330 362.737 237.770 362.119 238.343 361.578  c
238.916 361.036 239.466 360.674 239.992 360.492  c
240.518 360.309 241.005 360.218 241.453 360.218  c
241.828 360.218 l
h
237.875 364.656 m
237.802 365.229 237.765 365.692 237.765 366.046  c
237.765 366.453 237.841 366.893 237.992 367.367  c
238.143 367.841 238.364 368.218 238.656 368.500  c
238.875 368.697 239.140 368.796 239.453 368.796  c
239.817 368.796 240.145 368.622 240.437 368.273  c
240.729 367.924 240.875 367.432 240.875 366.796  c
240.875 366.067 240.729 365.440 240.437 364.914  c
240.145 364.388 239.739 364.125 239.218 364.125  c
239.052 364.125 238.877 364.158 238.695 364.226  c
238.513 364.294 238.239 364.437 237.875 364.656  c
h
242.968 364.750 m
242.968 363.770 243.117 362.924 243.414 362.210  c
243.710 361.497 244.104 360.968 244.593 360.625  c
244.979 360.354 245.375 360.218 245.781 360.218  c
246.437 360.218 247.026 360.552 247.546 361.218  c
248.203 362.052 248.531 363.182 248.531 364.609  c
248.531 365.609 248.388 366.458 248.101 367.156  c
247.815 367.854 247.447 368.362 247.000 368.679  c
246.552 368.997 246.125 369.156 245.718 369.156  c
244.895 369.156 244.208 368.671 243.656 367.703  c
243.197 366.880 242.968 365.895 242.968 364.750  c
h
244.218 364.906 m
244.218 366.093 244.364 367.062 244.656 367.812  c
244.895 368.437 245.255 368.750 245.734 368.750  c
245.963 368.750 246.200 368.648 246.445 368.445  c
246.690 368.242 246.875 367.895 247.000 367.406  c
247.197 366.687 247.296 365.661 247.296 364.328  c
247.296 363.349 247.192 362.531 246.984 361.875  c
246.838 361.385 246.640 361.041 246.390 360.843  c
246.224 360.708 246.015 360.640 245.765 360.640  c
245.484 360.640 245.229 360.765 245.000 361.015  c
244.697 361.369 244.492 361.924 244.382 362.679  c
244.273 363.434 244.218 364.177 244.218 364.906  c
h
249.468 364.750 m
249.468 363.770 249.617 362.924 249.914 362.210  c
250.210 361.497 250.604 360.968 251.093 360.625  c
251.479 360.354 251.875 360.218 252.281 360.218  c
252.937 360.218 253.526 360.552 254.046 361.218  c
254.703 362.052 255.031 363.182 255.031 364.609  c
255.031 365.609 254.888 366.458 254.601 367.156  c
254.315 367.854 253.947 368.362 253.500 368.679  c
253.052 368.997 252.625 369.156 252.218 369.156  c
251.395 369.156 250.708 368.671 250.156 367.703  c
249.697 366.880 249.468 365.895 249.468 364.750  c
h
250.718 364.906 m
250.718 366.093 250.864 367.062 251.156 367.812  c
251.395 368.437 251.755 368.750 252.234 368.750  c
252.463 368.750 252.700 368.648 252.945 368.445  c
253.190 368.242 253.375 367.895 253.500 367.406  c
253.697 366.687 253.796 365.661 253.796 364.328  c
253.796 363.349 253.692 362.531 253.484 361.875  c
253.338 361.385 253.140 361.041 252.890 360.843  c
252.724 360.708 252.515 360.640 252.265 360.640  c
251.984 360.640 251.729 360.765 251.500 361.015  c
251.197 361.369 250.992 361.924 250.882 362.679  c
250.773 363.434 250.718 364.177 250.718 364.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 300.812 m
253.695 300.812 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
228 299 6 13 rc
newpath
238.796 306.437 m
230.203 306.437 l
230.203 305.765 l
238.796 305.765 l
238.796 306.437 l
h
f
Q
newpath
242.046 306.828 m
242.046 307.734 l
240.890 307.734 l
240.890 310.000 l
239.843 310.000 l
239.843 307.734 l
236.203 307.734 l
236.203 306.921 l
240.203 301.218 l
240.890 301.218 l
240.890 306.828 l
242.046 306.828 l
h
239.843 306.828 m
239.843 302.546 l
236.828 306.828 l
239.843 306.828 l
h
242.968 305.750 m
242.968 304.770 243.117 303.924 243.414 303.210  c
243.710 302.497 244.104 301.968 244.593 301.625  c
244.979 301.354 245.375 301.218 245.781 301.218  c
246.437 301.218 247.026 301.552 247.546 302.218  c
248.203 303.052 248.531 304.182 248.531 305.609  c
248.531 306.609 248.388 307.458 248.101 308.156  c
247.815 308.854 247.447 309.362 247.000 309.679  c
246.552 309.997 246.125 310.156 245.718 310.156  c
244.895 310.156 244.208 309.671 243.656 308.703  c
243.197 307.880 242.968 306.895 242.968 305.750  c
h
244.218 305.906 m
244.218 307.093 244.364 308.062 244.656 308.812  c
244.895 309.437 245.255 309.750 245.734 309.750  c
245.963 309.750 246.200 309.648 246.445 309.445  c
246.690 309.242 246.875 308.895 247.000 308.406  c
247.197 307.687 247.296 306.661 247.296 305.328  c
247.296 304.349 247.192 303.531 246.984 302.875  c
246.838 302.385 246.640 302.041 246.390 301.843  c
246.224 301.708 246.015 301.640 245.765 301.640  c
245.484 301.640 245.229 301.765 245.000 302.015  c
244.697 302.369 244.492 302.924 244.382 303.679  c
244.273 304.434 244.218 305.177 244.218 305.906  c
h
249.468 305.750 m
249.468 304.770 249.617 303.924 249.914 303.210  c
250.210 302.497 250.604 301.968 251.093 301.625  c
251.479 301.354 251.875 301.218 252.281 301.218  c
252.937 301.218 253.526 301.552 254.046 302.218  c
254.703 303.052 255.031 304.182 255.031 305.609  c
255.031 306.609 254.888 307.458 254.601 308.156  c
254.315 308.854 253.947 309.362 253.500 309.679  c
253.052 309.997 252.625 310.156 252.218 310.156  c
251.395 310.156 250.708 309.671 250.156 308.703  c
249.697 307.880 249.468 306.895 249.468 305.750  c
h
250.718 305.906 m
250.718 307.093 250.864 308.062 251.156 308.812  c
251.395 309.437 251.755 309.750 252.234 309.750  c
252.463 309.750 252.700 309.648 252.945 309.445  c
253.190 309.242 253.375 308.895 253.500 308.406  c
253.697 307.687 253.796 306.661 253.796 305.328  c
253.796 304.349 253.692 303.531 253.484 302.875  c
253.338 302.385 253.140 302.041 252.890 301.843  c
252.724 301.708 252.515 301.640 252.265 301.640  c
251.984 301.640 251.729 301.765 251.500 302.015  c
251.197 302.369 250.992 302.924 250.882 303.679  c
250.773 304.434 250.718 305.177 250.718 305.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 242.252 m
253.695 242.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
228 241 6 13 rc
newpath
238.796 248.437 m
230.203 248.437 l
230.203 247.765 l
238.796 247.765 l
238.796 248.437 l
h
f
Q
newpath
241.953 250.343 m
241.359 252.000 l
236.281 252.000 l
236.281 251.765 l
237.770 250.401 238.820 249.286 239.429 248.421  c
240.039 247.557 240.343 246.770 240.343 246.062  c
240.343 245.510 240.177 245.059 239.843 244.710  c
239.510 244.362 239.109 244.187 238.640 244.187  c
238.224 244.187 237.846 244.309 237.507 244.554  c
237.169 244.799 236.921 245.161 236.765 245.640  c
236.531 245.640 l
236.635 244.859 236.906 244.260 237.343 243.843  c
237.781 243.427 238.328 243.218 238.984 243.218  c
239.682 243.218 240.265 243.442 240.734 243.890  c
241.203 244.338 241.437 244.864 241.437 245.468  c
241.437 245.906 241.333 246.343 241.125 246.781  c
240.812 247.468 240.307 248.192 239.609 248.953  c
238.557 250.109 237.895 250.807 237.625 251.046  c
239.875 251.046 l
240.333 251.046 240.653 251.028 240.835 250.992  c
241.018 250.955 241.184 250.885 241.335 250.781  c
241.487 250.677 241.614 250.531 241.718 250.343  c
241.953 250.343 l
h
242.968 247.750 m
242.968 246.770 243.117 245.924 243.414 245.210  c
243.710 244.497 244.104 243.968 244.593 243.625  c
244.979 243.354 245.375 243.218 245.781 243.218  c
246.437 243.218 247.026 243.552 247.546 244.218  c
248.203 245.052 248.531 246.182 248.531 247.609  c
248.531 248.609 248.388 249.458 248.101 250.156  c
247.815 250.854 247.447 251.362 247.000 251.679  c
246.552 251.997 246.125 252.156 245.718 252.156  c
244.895 252.156 244.208 251.671 243.656 250.703  c
243.197 249.880 242.968 248.895 242.968 247.750  c
h
244.218 247.906 m
244.218 249.093 244.364 250.062 244.656 250.812  c
244.895 251.437 245.255 251.750 245.734 251.750  c
245.963 251.750 246.200 251.648 246.445 251.445  c
246.690 251.242 246.875 250.895 247.000 250.406  c
247.197 249.687 247.296 248.661 247.296 247.328  c
247.296 246.349 247.192 245.531 246.984 244.875  c
246.838 244.385 246.640 244.041 246.390 243.843  c
246.224 243.708 246.015 243.640 245.765 243.640  c
245.484 243.640 245.229 243.765 245.000 244.015  c
244.697 244.369 244.492 244.924 244.382 245.679  c
244.273 246.434 244.218 247.177 244.218 247.906  c
h
249.468 247.750 m
249.468 246.770 249.617 245.924 249.914 245.210  c
250.210 244.497 250.604 243.968 251.093 243.625  c
251.479 243.354 251.875 243.218 252.281 243.218  c
252.937 243.218 253.526 243.552 254.046 244.218  c
254.703 245.052 255.031 246.182 255.031 247.609  c
255.031 248.609 254.888 249.458 254.601 250.156  c
254.315 250.854 253.947 251.362 253.500 251.679  c
253.052 251.997 252.625 252.156 252.218 252.156  c
251.395 252.156 250.708 251.671 250.156 250.703  c
249.697 249.880 249.468 248.895 249.468 247.750  c
h
250.718 247.906 m
250.718 249.093 250.864 250.062 251.156 250.812  c
251.395 251.437 251.755 251.750 252.234 251.750  c
252.463 251.750 252.700 251.648 252.945 251.445  c
253.190 251.242 253.375 250.895 253.500 250.406  c
253.697 249.687 253.796 248.661 253.796 247.328  c
253.796 246.349 253.692 245.531 253.484 244.875  c
253.338 244.385 253.140 244.041 252.890 243.843  c
252.724 243.708 252.515 243.640 252.265 243.640  c
251.984 243.640 251.729 243.765 251.500 244.015  c
251.197 244.369 250.992 244.924 250.882 245.679  c
250.773 246.434 250.718 247.177 250.718 247.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 183.693 m
253.695 183.693 l
S
Q
q
0 w
newpath
257.695 125.134 m
253.695 125.134 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
241.953 133.343 m
241.359 135.000 l
236.281 135.000 l
236.281 134.765 l
237.770 133.401 238.820 132.286 239.429 131.421  c
240.039 130.557 240.343 129.770 240.343 129.062  c
240.343 128.510 240.177 128.059 239.843 127.710  c
239.510 127.362 239.109 127.187 238.640 127.187  c
238.224 127.187 237.846 127.309 237.507 127.554  c
237.169 127.799 236.921 128.161 236.765 128.640  c
236.531 128.640 l
236.635 127.859 236.906 127.260 237.343 126.843  c
237.781 126.427 238.328 126.218 238.984 126.218  c
239.682 126.218 240.265 126.442 240.734 126.890  c
241.203 127.338 241.437 127.864 241.437 128.468  c
241.437 128.906 241.333 129.343 241.125 129.781  c
240.812 130.468 240.307 131.192 239.609 131.953  c
238.557 133.109 237.895 133.807 237.625 134.046  c
239.875 134.046 l
240.333 134.046 240.653 134.028 240.835 133.992  c
241.018 133.955 241.184 133.885 241.335 133.781  c
241.487 133.677 241.614 133.531 241.718 133.343  c
241.953 133.343 l
h
242.968 130.750 m
242.968 129.770 243.117 128.924 243.414 128.210  c
243.710 127.497 244.104 126.968 244.593 126.625  c
244.979 126.354 245.375 126.218 245.781 126.218  c
246.437 126.218 247.026 126.552 247.546 127.218  c
248.203 128.052 248.531 129.182 248.531 130.609  c
248.531 131.609 248.388 132.458 248.101 133.156  c
247.815 133.854 247.447 134.362 247.000 134.679  c
246.552 134.997 246.125 135.156 245.718 135.156  c
244.895 135.156 244.208 134.671 243.656 133.703  c
243.197 132.880 242.968 131.895 242.968 130.750  c
h
244.218 130.906 m
244.218 132.093 244.364 133.062 244.656 133.812  c
244.895 134.437 245.255 134.750 245.734 134.750  c
245.963 134.750 246.200 134.648 246.445 134.445  c
246.690 134.242 246.875 133.895 247.000 133.406  c
247.197 132.687 247.296 131.661 247.296 130.328  c
247.296 129.349 247.192 128.531 246.984 127.875  c
246.838 127.385 246.640 127.041 246.390 126.843  c
246.224 126.708 246.015 126.640 245.765 126.640  c
245.484 126.640 245.229 126.765 245.000 127.015  c
244.697 127.369 244.492 127.924 244.382 128.679  c
244.273 129.434 244.218 130.177 244.218 130.906  c
h
249.468 130.750 m
249.468 129.770 249.617 128.924 249.914 128.210  c
250.210 127.497 250.604 126.968 251.093 126.625  c
251.479 126.354 251.875 126.218 252.281 126.218  c
252.937 126.218 253.526 126.552 254.046 127.218  c
254.703 128.052 255.031 129.182 255.031 130.609  c
255.031 131.609 254.888 132.458 254.601 133.156  c
254.315 133.854 253.947 134.362 253.500 134.679  c
253.052 134.997 252.625 135.156 252.218 135.156  c
251.395 135.156 250.708 134.671 250.156 133.703  c
249.697 132.880 249.468 131.895 249.468 130.750  c
h
250.718 130.906 m
250.718 132.093 250.864 133.062 251.156 133.812  c
251.395 134.437 251.755 134.750 252.234 134.750  c
252.463 134.750 252.700 134.648 252.945 134.445  c
253.190 134.242 253.375 133.895 253.500 133.406  c
253.697 132.687 253.796 131.661 253.796 130.328  c
253.796 129.349 253.692 128.531 253.484 127.875  c
253.338 127.385 253.140 127.041 252.890 126.843  c
252.724 126.708 252.515 126.640 252.265 126.640  c
251.984 126.640 251.729 126.765 251.500 127.015  c
251.197 127.369 250.992 127.924 250.882 128.679  c
250.773 129.434 250.718 130.177 250.718 130.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 66.5747 m
253.695 66.5747 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
242.046 72.8281 m
242.046 73.7343 l
240.890 73.7343 l
240.890 76.0000 l
239.843 76.0000 l
239.843 73.7343 l
236.203 73.7343 l
236.203 72.9218 l
240.203 67.2187 l
240.890 67.2187 l
240.890 72.8281 l
242.046 72.8281 l
h
239.843 72.8281 m
239.843 68.5468 l
236.828 72.8281 l
239.843 72.8281 l
h
242.968 71.7500 m
242.968 70.7708 243.117 69.9244 243.414 69.2109  c
243.710 68.4974 244.104 67.9687 244.593 67.6250  c
244.979 67.3541 245.375 67.2187 245.781 67.2187  c
246.437 67.2187 247.026 67.5520 247.546 68.2187  c
248.203 69.0520 248.531 70.1822 248.531 71.6093  c
248.531 72.6093 248.388 73.4583 248.101 74.1562  c
247.815 74.8541 247.447 75.3619 247.000 75.6796  c
246.552 75.9974 246.125 76.1562 245.718 76.1562  c
244.895 76.1562 244.208 75.6718 243.656 74.7031  c
243.197 73.8802 242.968 72.8958 242.968 71.7500  c
h
244.218 71.9062 m
244.218 73.0937 244.364 74.0625 244.656 74.8125  c
244.895 75.4375 245.255 75.7500 245.734 75.7500  c
245.963 75.7500 246.200 75.6484 246.445 75.4453  c
246.690 75.2421 246.875 74.8958 247.000 74.4062  c
247.197 73.6875 247.296 72.6614 247.296 71.3281  c
247.296 70.3489 247.192 69.5312 246.984 68.8750  c
246.838 68.3854 246.640 68.0416 246.390 67.8437  c
246.224 67.7083 246.015 67.6406 245.765 67.6406  c
245.484 67.6406 245.229 67.7656 245.000 68.0156  c
244.697 68.3697 244.492 68.9244 244.382 69.6796  c
244.273 70.4349 244.218 71.1770 244.218 71.9062  c
h
249.468 71.7500 m
249.468 70.7708 249.617 69.9244 249.914 69.2109  c
250.210 68.4974 250.604 67.9687 251.093 67.6250  c
251.479 67.3541 251.875 67.2187 252.281 67.2187  c
252.937 67.2187 253.526 67.5520 254.046 68.2187  c
254.703 69.0520 255.031 70.1822 255.031 71.6093  c
255.031 72.6093 254.888 73.4583 254.601 74.1562  c
254.315 74.8541 253.947 75.3619 253.500 75.6796  c
253.052 75.9974 252.625 76.1562 252.218 76.1562  c
251.395 76.1562 250.708 75.6718 250.156 74.7031  c
249.697 73.8802 249.468 72.8958 249.468 71.7500  c
h
250.718 71.9062 m
250.718 73.0937 250.864 74.0625 251.156 74.8125  c
251.395 75.4375 251.755 75.7500 252.234 75.7500  c
252.463 75.7500 252.700 75.6484 252.945 75.4453  c
253.190 75.2421 253.375 74.8958 253.500 74.4062  c
253.697 73.6875 253.796 72.6614 253.796 71.3281  c
253.796 70.3489 253.692 69.5312 253.484 68.8750  c
253.338 68.3854 253.140 68.0416 252.890 67.8437  c
252.724 67.7083 252.515 67.6406 252.265 67.6406  c
251.984 67.6406 251.729 67.7656 251.500 68.0156  c
251.197 68.3697 250.992 68.9244 250.882 69.6796  c
250.773 70.4349 250.718 71.1770 250.718 71.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 8.01541 m
253.695 8.01541 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
241.828 9.21875 m
241.828 9.45312 l
241.265 9.50520 240.807 9.61458 240.453 9.78125  c
240.099 9.94791 239.750 10.2031 239.406 10.5468  c
239.062 10.8906 238.778 11.2734 238.554 11.6953  c
238.330 12.1171 238.140 12.6145 237.984 13.1875  c
238.599 12.7708 239.213 12.5625 239.828 12.5625  c
240.411 12.5625 240.919 12.7994 241.351 13.2734  c
241.783 13.7474 242.000 14.3593 242.000 15.1093  c
242.000 15.8281 241.781 16.4843 241.343 17.0781  c
240.822 17.7968 240.130 18.1562 239.265 18.1562  c
238.671 18.1562 238.171 17.9583 237.765 17.5625  c
236.963 16.8125 236.562 15.8333 236.562 14.6250  c
236.562 13.8541 236.716 13.1224 237.023 12.4296  c
237.330 11.7369 237.770 11.1197 238.343 10.5781  c
238.916 10.0364 239.466 9.67447 239.992 9.49218  c
240.518 9.30989 241.005 9.21875 241.453 9.21875  c
241.828 9.21875 l
h
237.875 13.6562 m
237.802 14.2291 237.765 14.6927 237.765 15.0468  c
237.765 15.4531 237.841 15.8932 237.992 16.3671  c
238.143 16.8411 238.364 17.2187 238.656 17.5000  c
238.875 17.6979 239.140 17.7968 239.453 17.7968  c
239.817 17.7968 240.145 17.6224 240.437 17.2734  c
240.729 16.9244 240.875 16.4322 240.875 15.7968  c
240.875 15.0677 240.729 14.4401 240.437 13.9140  c
240.145 13.3880 239.739 13.1250 239.218 13.1250  c
239.052 13.1250 238.877 13.1588 238.695 13.2265  c
238.513 13.2942 238.239 13.4375 237.875 13.6562  c
h
242.968 13.7500 m
242.968 12.7708 243.117 11.9244 243.414 11.2109  c
243.710 10.4974 244.104 9.96875 244.593 9.62500  c
244.979 9.35416 245.375 9.21875 245.781 9.21875  c
246.437 9.21875 247.026 9.55208 247.546 10.2187  c
248.203 11.0520 248.531 12.1822 248.531 13.6093  c
248.531 14.6093 248.388 15.4583 248.101 16.1562  c
247.815 16.8541 247.447 17.3619 247.000 17.6796  c
246.552 17.9974 246.125 18.1562 245.718 18.1562  c
244.895 18.1562 244.208 17.6718 243.656 16.7031  c
243.197 15.8802 242.968 14.8958 242.968 13.7500  c
h
244.218 13.9062 m
244.218 15.0937 244.364 16.0625 244.656 16.8125  c
244.895 17.4375 245.255 17.7500 245.734 17.7500  c
245.963 17.7500 246.200 17.6484 246.445 17.4453  c
246.690 17.2421 246.875 16.8958 247.000 16.4062  c
247.197 15.6875 247.296 14.6614 247.296 13.3281  c
247.296 12.3489 247.192 11.5312 246.984 10.8750  c
246.838 10.3854 246.640 10.0416 246.390 9.84375  c
246.224 9.70833 246.015 9.64062 245.765 9.64062  c
245.484 9.64062 245.229 9.76562 245.000 10.0156  c
244.697 10.3697 244.492 10.9244 244.382 11.6796  c
244.273 12.4349 244.218 13.1770 244.218 13.9062  c
h
249.468 13.7500 m
249.468 12.7708 249.617 11.9244 249.914 11.2109  c
250.210 10.4974 250.604 9.96875 251.093 9.62500  c
251.479 9.35416 251.875 9.21875 252.281 9.21875  c
252.937 9.21875 253.526 9.55208 254.046 10.2187  c
254.703 11.0520 255.031 12.1822 255.031 13.6093  c
255.031 14.6093 254.888 15.4583 254.601 16.1562  c
254.315 16.8541 253.947 17.3619 253.500 17.6796  c
253.052 17.9974 252.625 18.1562 252.218 18.1562  c
251.395 18.1562 250.708 17.6718 250.156 16.7031  c
249.697 15.8802 249.468 14.8958 249.468 13.7500  c
h
250.718 13.9062 m
250.718 15.0937 250.864 16.0625 251.156 16.8125  c
251.395 17.4375 251.755 17.7500 252.234 17.7500  c
252.463 17.7500 252.700 17.6484 252.945 17.4453  c
253.190 17.2421 253.375 16.8958 253.500 16.4062  c
253.697 15.6875 253.796 14.6614 253.796 13.3281  c
253.796 12.3489 253.692 11.5312 253.484 10.8750  c
253.338 10.3854 253.140 10.0416 252.890 9.84375  c
252.724 9.70833 252.515 9.64062 252.265 9.64062  c
251.984 9.64062 251.729 9.76562 251.500 10.0156  c
251.197 10.3697 250.992 10.9244 250.882 11.6796  c
250.773 12.4349 250.718 13.1770 250.718 13.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 388.651 m
255.695 388.651 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 330.091 m
255.695 330.091 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 271.532 m
255.695 271.532 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 212.973 m
255.695 212.973 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 154.413 m
255.695 154.413 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 95.8544 m
255.695 95.8544 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
257.695 37.2950 m
255.695 37.2950 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
