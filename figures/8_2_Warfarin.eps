%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, August 28, 2012 7:50:20 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
0 0 0 RG
q
0 J
1 j
Q
q
0 J
1 j
Q
0 0 1.00000 RG
q
q
[ 1.00000 0 0 1.00000 378.985 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -378.985 -4.51705 ] concat
[ 1.00000 0 0 1.00000 344.337 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -344.337 -4.51705 ] concat
[ 1.00000 0 0 1.00000 361.661 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -361.661 -4.51705 ] concat
[ 1.00000 0 0 1.00000 327.012 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -327.012 -4.51705 ] concat
[ 1.00000 0 0 1.00000 309.688 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -309.688 -4.51705 ] concat
[ 1.00000 0 0 1.00000 275.040 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -275.040 -4.51705 ] concat
[ 1.00000 0 0 1.00000 257.715 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -257.715 -4.51705 ] concat
[ 1.00000 0 0 1.00000 223.067 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -223.067 -4.51705 ] concat
[ 1.00000 0 0 1.00000 205.742 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -205.742 -4.51705 ] concat
[ 1.00000 0 0 1.00000 240.391 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -240.391 -4.51705 ] concat
[ 1.00000 0 0 1.00000 292.364 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -292.364 -4.51705 ] concat
[ 1.00000 0 0 1.00000 153.770 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -153.770 -4.51705 ] concat
[ 1.00000 0 0 1.00000 171.094 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -171.094 -4.51705 ] concat
[ 1.00000 0 0 1.00000 136.445 4.51715 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -136.445 -4.51715 ] concat
[ 1.00000 0 0 1.00000 101.797 4.53118 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -101.797 -4.53118 ] concat
[ 1.00000 0 0 1.00000 119.121 4.51818 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -119.121 -4.51818 ] concat
[ 1.00000 0 0 1.00000 84.4728 4.69369 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -84.4728 -4.69369 ] concat
[ 1.00000 0 0 1.00000 49.8242 32.1156 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -49.8242 -32.1156 ] concat
[ 1.00000 0 0 1.00000 67.1485 6.72494 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -67.1485 -6.72494 ] concat
[ 1.00000 0 0 1.00000 32.5000 349.500 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -32.5000 -349.500 ] concat
[ 1.00000 0 0 1.00000 188.418 4.51705 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -188.418 -4.51705 ] concat
Q
Q
q
0 0 0 RG
q
newpath
36.0000 353.000 m
382.485 353.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 374 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
0 J
1 j
newpath
36.0000 353.000 m
36.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.4687 371.750 m
38.4687 370.770 38.6171 369.924 38.9140 369.210  c
39.2109 368.497 39.6041 367.968 40.0937 367.625  c
40.4791 367.354 40.8750 367.218 41.2812 367.218  c
41.9375 367.218 42.5260 367.552 43.0468 368.218  c
43.7031 369.052 44.0312 370.182 44.0312 371.609  c
44.0312 372.609 43.8880 373.458 43.6015 374.156  c
43.3151 374.854 42.9479 375.362 42.5000 375.679  c
42.0520 375.997 41.6250 376.156 41.2187 376.156  c
40.3958 376.156 39.7083 375.671 39.1562 374.703  c
38.6979 373.880 38.4687 372.895 38.4687 371.750  c
h
39.7187 371.906 m
39.7187 373.093 39.8645 374.062 40.1562 374.812  c
40.3958 375.437 40.7552 375.750 41.2343 375.750  c
41.4635 375.750 41.7005 375.648 41.9453 375.445  c
42.1901 375.242 42.3750 374.895 42.5000 374.406  c
42.6979 373.687 42.7968 372.661 42.7968 371.328  c
42.7968 370.349 42.6927 369.531 42.4843 368.875  c
42.3385 368.385 42.1406 368.041 41.8906 367.843  c
41.7239 367.708 41.5156 367.640 41.2656 367.640  c
40.9843 367.640 40.7291 367.765 40.5000 368.015  c
40.1979 368.369 39.9921 368.924 39.8828 369.679  c
39.7734 370.434 39.7187 371.177 39.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
122.621 353.000 m
122.621 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
129.640 367.390 m
129.140 368.468 l
126.562 368.468 l
126.000 369.625 l
127.114 369.791 128.000 370.208 128.656 370.875  c
129.218 371.447 129.500 372.125 129.500 372.906  c
129.500 373.364 129.408 373.786 129.226 374.171  c
129.044 374.557 128.812 374.885 128.531 375.156  c
128.250 375.427 127.937 375.640 127.593 375.796  c
127.114 376.036 126.614 376.156 126.093 376.156  c
125.583 376.156 125.210 376.067 124.976 375.890  c
124.742 375.713 124.625 375.520 124.625 375.312  c
124.625 375.187 124.674 375.080 124.773 374.992  c
124.872 374.903 124.994 374.859 125.140 374.859  c
125.244 374.859 125.338 374.875 125.421 374.906  c
125.505 374.937 125.645 375.026 125.843 375.171  c
126.166 375.390 126.489 375.500 126.812 375.500  c
127.312 375.500 127.747 375.312 128.117 374.937  c
128.487 374.562 128.671 374.104 128.671 373.562  c
128.671 373.041 128.505 372.557 128.171 372.109  c
127.838 371.661 127.380 371.312 126.796 371.062  c
126.328 370.875 125.697 370.765 124.906 370.734  c
126.562 367.390 l
129.640 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
209.242 353.000 m
209.242 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
209.531 368.234 m
211.625 367.218 l
211.828 367.218 l
211.828 374.484 l
211.828 374.963 211.849 375.263 211.890 375.382  c
211.932 375.502 212.015 375.593 212.140 375.656  c
212.265 375.718 212.520 375.755 212.906 375.765  c
212.906 376.000 l
209.671 376.000 l
209.671 375.765 l
210.078 375.755 210.341 375.718 210.460 375.656  c
210.580 375.593 210.664 375.510 210.710 375.406  c
210.757 375.302 210.781 374.994 210.781 374.484  c
210.781 369.843 l
210.781 369.208 210.760 368.802 210.718 368.625  c
210.687 368.489 210.632 368.390 210.554 368.328  c
210.476 368.265 210.380 368.234 210.265 368.234  c
210.109 368.234 209.895 368.302 209.625 368.437  c
209.531 368.234 l
h
214.968 371.750 m
214.968 370.770 215.117 369.924 215.414 369.210  c
215.710 368.497 216.104 367.968 216.593 367.625  c
216.979 367.354 217.375 367.218 217.781 367.218  c
218.437 367.218 219.026 367.552 219.546 368.218  c
220.203 369.052 220.531 370.182 220.531 371.609  c
220.531 372.609 220.388 373.458 220.101 374.156  c
219.815 374.854 219.447 375.362 219.000 375.679  c
218.552 375.997 218.125 376.156 217.718 376.156  c
216.895 376.156 216.208 375.671 215.656 374.703  c
215.197 373.880 214.968 372.895 214.968 371.750  c
h
216.218 371.906 m
216.218 373.093 216.364 374.062 216.656 374.812  c
216.895 375.437 217.255 375.750 217.734 375.750  c
217.963 375.750 218.200 375.648 218.445 375.445  c
218.690 375.242 218.875 374.895 219.000 374.406  c
219.197 373.687 219.296 372.661 219.296 371.328  c
219.296 370.349 219.192 369.531 218.984 368.875  c
218.838 368.385 218.640 368.041 218.390 367.843  c
218.224 367.708 218.015 367.640 217.765 367.640  c
217.484 367.640 217.229 367.765 217.000 368.015  c
216.697 368.369 216.492 368.924 216.382 369.679  c
216.273 370.434 216.218 371.177 216.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
295.864 353.000 m
295.864 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
295.531 368.234 m
297.625 367.218 l
297.828 367.218 l
297.828 374.484 l
297.828 374.963 297.849 375.263 297.890 375.382  c
297.932 375.502 298.015 375.593 298.140 375.656  c
298.265 375.718 298.520 375.755 298.906 375.765  c
298.906 376.000 l
295.671 376.000 l
295.671 375.765 l
296.078 375.755 296.341 375.718 296.460 375.656  c
296.580 375.593 296.664 375.510 296.710 375.406  c
296.757 375.302 296.781 374.994 296.781 374.484  c
296.781 369.843 l
296.781 369.208 296.760 368.802 296.718 368.625  c
296.687 368.489 296.632 368.390 296.554 368.328  c
296.476 368.265 296.380 368.234 296.265 368.234  c
296.109 368.234 295.895 368.302 295.625 368.437  c
295.531 368.234 l
h
306.140 367.390 m
305.640 368.468 l
303.062 368.468 l
302.500 369.625 l
303.614 369.791 304.500 370.208 305.156 370.875  c
305.718 371.447 306.000 372.125 306.000 372.906  c
306.000 373.364 305.908 373.786 305.726 374.171  c
305.544 374.557 305.312 374.885 305.031 375.156  c
304.750 375.427 304.437 375.640 304.093 375.796  c
303.614 376.036 303.114 376.156 302.593 376.156  c
302.083 376.156 301.710 376.067 301.476 375.890  c
301.242 375.713 301.125 375.520 301.125 375.312  c
301.125 375.187 301.174 375.080 301.273 374.992  c
301.372 374.903 301.494 374.859 301.640 374.859  c
301.744 374.859 301.838 374.875 301.921 374.906  c
302.005 374.937 302.145 375.026 302.343 375.171  c
302.666 375.390 302.989 375.500 303.312 375.500  c
303.812 375.500 304.247 375.312 304.617 374.937  c
304.987 374.562 305.171 374.104 305.171 373.562  c
305.171 373.041 305.005 372.557 304.671 372.109  c
304.338 371.661 303.880 371.312 303.296 371.062  c
302.828 370.875 302.197 370.765 301.406 370.734  c
303.062 367.390 l
306.140 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
382.485 353.000 m
382.485 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
386.953 374.343 m
386.359 376.000 l
381.281 376.000 l
381.281 375.765 l
382.770 374.401 383.820 373.286 384.429 372.421  c
385.039 371.557 385.343 370.770 385.343 370.062  c
385.343 369.510 385.177 369.059 384.843 368.710  c
384.510 368.362 384.109 368.187 383.640 368.187  c
383.224 368.187 382.846 368.309 382.507 368.554  c
382.169 368.799 381.921 369.161 381.765 369.640  c
381.531 369.640 l
381.635 368.859 381.906 368.260 382.343 367.843  c
382.781 367.427 383.328 367.218 383.984 367.218  c
384.682 367.218 385.265 367.442 385.734 367.890  c
386.203 368.338 386.437 368.864 386.437 369.468  c
386.437 369.906 386.333 370.343 386.125 370.781  c
385.812 371.468 385.307 372.192 384.609 372.953  c
383.557 374.109 382.895 374.807 382.625 375.046  c
384.875 375.046 l
385.333 375.046 385.653 375.028 385.835 374.992  c
386.018 374.955 386.184 374.885 386.335 374.781  c
386.487 374.677 386.614 374.531 386.718 374.343  c
386.953 374.343 l
h
387.968 371.750 m
387.968 370.770 388.117 369.924 388.414 369.210  c
388.710 368.497 389.104 367.968 389.593 367.625  c
389.979 367.354 390.375 367.218 390.781 367.218  c
391.437 367.218 392.026 367.552 392.546 368.218  c
393.203 369.052 393.531 370.182 393.531 371.609  c
393.531 372.609 393.388 373.458 393.101 374.156  c
392.815 374.854 392.447 375.362 392.000 375.679  c
391.552 375.997 391.125 376.156 390.718 376.156  c
389.895 376.156 389.208 375.671 388.656 374.703  c
388.197 373.880 387.968 372.895 387.968 371.750  c
h
389.218 371.906 m
389.218 373.093 389.364 374.062 389.656 374.812  c
389.895 375.437 390.255 375.750 390.734 375.750  c
390.963 375.750 391.200 375.648 391.445 375.445  c
391.690 375.242 391.875 374.895 392.000 374.406  c
392.197 373.687 392.296 372.661 392.296 371.328  c
392.296 370.349 392.192 369.531 391.984 368.875  c
391.838 368.385 391.640 368.041 391.390 367.843  c
391.224 367.708 391.015 367.640 390.765 367.640  c
390.484 367.640 390.229 367.765 390.000 368.015  c
389.697 368.369 389.492 368.924 389.382 369.679  c
389.273 370.434 389.218 371.177 389.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
53.3242 353.000 m
53.3242 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
70.6485 353.000 m
70.6485 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
87.9728 353.000 m
87.9728 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
105.297 353.000 m
105.297 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
139.945 353.000 m
139.945 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
157.270 353.000 m
157.270 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
174.594 353.000 m
174.594 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
191.918 353.000 m
191.918 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
226.567 353.000 m
226.567 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
243.891 353.000 m
243.891 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
261.215 353.000 m
261.215 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
278.540 353.000 m
278.540 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
313.188 353.000 m
313.188 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
330.512 353.000 m
330.512 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
347.837 353.000 m
347.837 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
365.161 353.000 m
365.161 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
36.0000 353.000 m
36.0000 8.01705 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
0 J
1 j
newpath
36.0000 353.000 m
32.0000 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 358.750 m
28.4687 357.770 28.6171 356.924 28.9140 356.210  c
29.2109 355.497 29.6041 354.968 30.0937 354.625  c
30.4791 354.354 30.8750 354.218 31.2812 354.218  c
31.9375 354.218 32.5260 354.552 33.0468 355.218  c
33.7031 356.052 34.0312 357.182 34.0312 358.609  c
34.0312 359.609 33.8880 360.458 33.6015 361.156  c
33.3151 361.854 32.9479 362.362 32.5000 362.679  c
32.0520 362.997 31.6250 363.156 31.2187 363.156  c
30.3958 363.156 29.7083 362.671 29.1562 361.703  c
28.6979 360.880 28.4687 359.895 28.4687 358.750  c
h
29.7187 358.906 m
29.7187 360.093 29.8645 361.062 30.1562 361.812  c
30.3958 362.437 30.7552 362.750 31.2343 362.750  c
31.4635 362.750 31.7005 362.648 31.9453 362.445  c
32.1901 362.242 32.3750 361.895 32.5000 361.406  c
32.6979 360.687 32.7968 359.661 32.7968 358.328  c
32.7968 357.349 32.6927 356.531 32.4843 355.875  c
32.3385 355.385 32.1406 355.041 31.8906 354.843  c
31.7239 354.708 31.5156 354.640 31.2656 354.640  c
30.9843 354.640 30.7291 354.765 30.5000 355.015  c
30.1979 355.369 29.9921 355.924 29.8828 356.679  c
29.7734 357.434 29.7187 358.177 29.7187 358.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 273.653 m
32.0000 273.653 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
18.4687 278.750 m
18.4687 277.770 18.6171 276.924 18.9140 276.210  c
19.2109 275.497 19.6041 274.968 20.0937 274.625  c
20.4791 274.354 20.8750 274.218 21.2812 274.218  c
21.9375 274.218 22.5260 274.552 23.0468 275.218  c
23.7031 276.052 24.0312 277.182 24.0312 278.609  c
24.0312 279.609 23.8880 280.458 23.6015 281.156  c
23.3151 281.854 22.9479 282.362 22.5000 282.679  c
22.0520 282.997 21.6250 283.156 21.2187 283.156  c
20.3958 283.156 19.7083 282.671 19.1562 281.703  c
18.6979 280.880 18.4687 279.895 18.4687 278.750  c
h
19.7187 278.906 m
19.7187 280.093 19.8645 281.062 20.1562 281.812  c
20.3958 282.437 20.7552 282.750 21.2343 282.750  c
21.4635 282.750 21.7005 282.648 21.9453 282.445  c
22.1901 282.242 22.3750 281.895 22.5000 281.406  c
22.6979 280.687 22.7968 279.661 22.7968 278.328  c
22.7968 277.349 22.6927 276.531 22.4843 275.875  c
22.3385 275.385 22.1406 275.041 21.8906 274.843  c
21.7239 274.708 21.5156 274.640 21.2656 274.640  c
20.9843 274.640 20.7291 274.765 20.5000 275.015  c
20.1979 275.369 19.9921 275.924 19.8828 276.679  c
19.7734 277.434 19.7187 278.177 19.7187 278.906  c
h
26.1250 281.765 m
26.3229 281.765 26.4895 281.835 26.6250 281.976  c
26.7604 282.117 26.8281 282.281 26.8281 282.468  c
26.8281 282.666 26.7604 282.833 26.6250 282.968  c
26.4895 283.104 26.3229 283.171 26.1250 283.171  c
25.9270 283.171 25.7604 283.104 25.6250 282.968  c
25.4895 282.833 25.4218 282.666 25.4218 282.468  c
25.4218 282.270 25.4895 282.104 25.6250 281.968  c
25.7604 281.833 25.9270 281.765 26.1250 281.765  c
h
29.2812 275.234 m
31.3750 274.218 l
31.5781 274.218 l
31.5781 281.484 l
31.5781 281.963 31.5989 282.263 31.6406 282.382  c
31.6822 282.502 31.7656 282.593 31.8906 282.656  c
32.0156 282.718 32.2708 282.755 32.6562 282.765  c
32.6562 283.000 l
29.4218 283.000 l
29.4218 282.765 l
29.8281 282.755 30.0911 282.718 30.2109 282.656  c
30.3307 282.593 30.4140 282.510 30.4609 282.406  c
30.5078 282.302 30.5312 281.994 30.5312 281.484  c
30.5312 276.843 l
30.5312 276.208 30.5104 275.802 30.4687 275.625  c
30.4375 275.489 30.3828 275.390 30.3046 275.328  c
30.2265 275.265 30.1302 275.234 30.0156 275.234  c
29.8593 275.234 29.6458 275.302 29.3750 275.437  c
29.2812 275.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 194.307 m
32.0000 194.307 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
18.4687 199.750 m
18.4687 198.770 18.6171 197.924 18.9140 197.210  c
19.2109 196.497 19.6041 195.968 20.0937 195.625  c
20.4791 195.354 20.8750 195.218 21.2812 195.218  c
21.9375 195.218 22.5260 195.552 23.0468 196.218  c
23.7031 197.052 24.0312 198.182 24.0312 199.609  c
24.0312 200.609 23.8880 201.458 23.6015 202.156  c
23.3151 202.854 22.9479 203.362 22.5000 203.679  c
22.0520 203.997 21.6250 204.156 21.2187 204.156  c
20.3958 204.156 19.7083 203.671 19.1562 202.703  c
18.6979 201.880 18.4687 200.895 18.4687 199.750  c
h
19.7187 199.906 m
19.7187 201.093 19.8645 202.062 20.1562 202.812  c
20.3958 203.437 20.7552 203.750 21.2343 203.750  c
21.4635 203.750 21.7005 203.648 21.9453 203.445  c
22.1901 203.242 22.3750 202.895 22.5000 202.406  c
22.6979 201.687 22.7968 200.661 22.7968 199.328  c
22.7968 198.349 22.6927 197.531 22.4843 196.875  c
22.3385 196.385 22.1406 196.041 21.8906 195.843  c
21.7239 195.708 21.5156 195.640 21.2656 195.640  c
20.9843 195.640 20.7291 195.765 20.5000 196.015  c
20.1979 196.369 19.9921 196.924 19.8828 197.679  c
19.7734 198.434 19.7187 199.177 19.7187 199.906  c
h
26.1250 202.765 m
26.3229 202.765 26.4895 202.835 26.6250 202.976  c
26.7604 203.117 26.8281 203.281 26.8281 203.468  c
26.8281 203.666 26.7604 203.833 26.6250 203.968  c
26.4895 204.104 26.3229 204.171 26.1250 204.171  c
25.9270 204.171 25.7604 204.104 25.6250 203.968  c
25.4895 203.833 25.4218 203.666 25.4218 203.468  c
25.4218 203.270 25.4895 203.104 25.6250 202.968  c
25.7604 202.833 25.9270 202.765 26.1250 202.765  c
h
33.7031 202.343 m
33.1093 204.000 l
28.0312 204.000 l
28.0312 203.765 l
29.5208 202.401 30.5703 201.286 31.1796 200.421  c
31.7890 199.557 32.0937 198.770 32.0937 198.062  c
32.0937 197.510 31.9270 197.059 31.5937 196.710  c
31.2604 196.362 30.8593 196.187 30.3906 196.187  c
29.9739 196.187 29.5963 196.309 29.2578 196.554  c
28.9192 196.799 28.6718 197.161 28.5156 197.640  c
28.2812 197.640 l
28.3854 196.859 28.6562 196.260 29.0937 195.843  c
29.5312 195.427 30.0781 195.218 30.7343 195.218  c
31.4322 195.218 32.0156 195.442 32.4843 195.890  c
32.9531 196.338 33.1875 196.864 33.1875 197.468  c
33.1875 197.906 33.0833 198.343 32.8750 198.781  c
32.5625 199.468 32.0572 200.192 31.3593 200.953  c
30.3072 202.109 29.6458 202.807 29.3750 203.046  c
31.6250 203.046 l
32.0833 203.046 32.4036 203.028 32.5859 202.992  c
32.7682 202.955 32.9349 202.885 33.0859 202.781  c
33.2369 202.677 33.3645 202.531 33.4687 202.343  c
33.7031 202.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 114.961 m
32.0000 114.961 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
18.4687 119.750 m
18.4687 118.770 18.6171 117.924 18.9140 117.210  c
19.2109 116.497 19.6041 115.968 20.0937 115.625  c
20.4791 115.354 20.8750 115.218 21.2812 115.218  c
21.9375 115.218 22.5260 115.552 23.0468 116.218  c
23.7031 117.052 24.0312 118.182 24.0312 119.609  c
24.0312 120.609 23.8880 121.458 23.6015 122.156  c
23.3151 122.854 22.9479 123.362 22.5000 123.679  c
22.0520 123.997 21.6250 124.156 21.2187 124.156  c
20.3958 124.156 19.7083 123.671 19.1562 122.703  c
18.6979 121.880 18.4687 120.895 18.4687 119.750  c
h
19.7187 119.906 m
19.7187 121.093 19.8645 122.062 20.1562 122.812  c
20.3958 123.437 20.7552 123.750 21.2343 123.750  c
21.4635 123.750 21.7005 123.648 21.9453 123.445  c
22.1901 123.242 22.3750 122.895 22.5000 122.406  c
22.6979 121.687 22.7968 120.661 22.7968 119.328  c
22.7968 118.349 22.6927 117.531 22.4843 116.875  c
22.3385 116.385 22.1406 116.041 21.8906 115.843  c
21.7239 115.708 21.5156 115.640 21.2656 115.640  c
20.9843 115.640 20.7291 115.765 20.5000 116.015  c
20.1979 116.369 19.9921 116.924 19.8828 117.679  c
19.7734 118.434 19.7187 119.177 19.7187 119.906  c
h
26.1250 122.765 m
26.3229 122.765 26.4895 122.835 26.6250 122.976  c
26.7604 123.117 26.8281 123.281 26.8281 123.468  c
26.8281 123.666 26.7604 123.833 26.6250 123.968  c
26.4895 124.104 26.3229 124.171 26.1250 124.171  c
25.9270 124.171 25.7604 124.104 25.6250 123.968  c
25.4895 123.833 25.4218 123.666 25.4218 123.468  c
25.4218 123.270 25.4895 123.104 25.6250 122.968  c
25.7604 122.833 25.9270 122.765 26.1250 122.765  c
h
28.4062 117.031 m
28.6562 116.447 28.9687 116.000 29.3437 115.687  c
29.7187 115.375 30.1822 115.218 30.7343 115.218  c
31.4322 115.218 31.9635 115.442 32.3281 115.890  c
32.6093 116.224 32.7500 116.578 32.7500 116.953  c
32.7500 117.588 32.3541 118.239 31.5625 118.906  c
32.0937 119.114 32.4947 119.411 32.7656 119.796  c
33.0364 120.182 33.1718 120.635 33.1718 121.156  c
33.1718 121.895 32.9322 122.536 32.4531 123.078  c
31.8385 123.796 30.9479 124.156 29.7812 124.156  c
29.1979 124.156 28.8020 124.083 28.5937 123.937  c
28.3854 123.791 28.2812 123.635 28.2812 123.468  c
28.2812 123.343 28.3307 123.237 28.4296 123.148  c
28.5286 123.059 28.6458 123.015 28.7812 123.015  c
28.8854 123.015 28.9947 123.031 29.1093 123.062  c
29.1822 123.083 29.3463 123.158 29.6015 123.289  c
29.8567 123.419 30.0312 123.500 30.1250 123.531  c
30.2812 123.572 30.4479 123.593 30.6250 123.593  c
31.0520 123.593 31.4270 123.427 31.7500 123.093  c
32.0729 122.760 32.2343 122.364 32.2343 121.906  c
32.2343 121.572 32.1614 121.250 32.0156 120.937  c
31.9010 120.697 31.7760 120.515 31.6406 120.390  c
31.4635 120.224 31.2161 120.072 30.8984 119.937  c
30.5807 119.802 30.2552 119.734 29.9218 119.734  c
29.7187 119.734 l
29.7187 119.531 l
30.0520 119.489 30.3880 119.369 30.7265 119.171  c
31.0651 118.974 31.3099 118.737 31.4609 118.460  c
31.6119 118.184 31.6875 117.875 31.6875 117.531  c
31.6875 117.104 31.5520 116.755 31.2812 116.484  c
31.0104 116.213 30.6718 116.078 30.2656 116.078  c
29.6093 116.078 29.0625 116.427 28.6250 117.125  c
28.4062 117.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 35.6156 m
32.0000 35.6156 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
18.4687 40.7500 m
18.4687 39.7708 18.6171 38.9244 18.9140 38.2109  c
19.2109 37.4974 19.6041 36.9687 20.0937 36.6250  c
20.4791 36.3541 20.8750 36.2187 21.2812 36.2187  c
21.9375 36.2187 22.5260 36.5520 23.0468 37.2187  c
23.7031 38.0520 24.0312 39.1822 24.0312 40.6093  c
24.0312 41.6093 23.8880 42.4583 23.6015 43.1562  c
23.3151 43.8541 22.9479 44.3619 22.5000 44.6796  c
22.0520 44.9974 21.6250 45.1562 21.2187 45.1562  c
20.3958 45.1562 19.7083 44.6718 19.1562 43.7031  c
18.6979 42.8802 18.4687 41.8958 18.4687 40.7500  c
h
19.7187 40.9062 m
19.7187 42.0937 19.8645 43.0625 20.1562 43.8125  c
20.3958 44.4375 20.7552 44.7500 21.2343 44.7500  c
21.4635 44.7500 21.7005 44.6484 21.9453 44.4453  c
22.1901 44.2421 22.3750 43.8958 22.5000 43.4062  c
22.6979 42.6875 22.7968 41.6614 22.7968 40.3281  c
22.7968 39.3489 22.6927 38.5312 22.4843 37.8750  c
22.3385 37.3854 22.1406 37.0416 21.8906 36.8437  c
21.7239 36.7083 21.5156 36.6406 21.2656 36.6406  c
20.9843 36.6406 20.7291 36.7656 20.5000 37.0156  c
20.1979 37.3697 19.9921 37.9244 19.8828 38.6796  c
19.7734 39.4349 19.7187 40.1770 19.7187 40.9062  c
h
26.1250 43.7656 m
26.3229 43.7656 26.4895 43.8359 26.6250 43.9765  c
26.7604 44.1171 26.8281 44.2812 26.8281 44.4687  c
26.8281 44.6666 26.7604 44.8333 26.6250 44.9687  c
26.4895 45.1041 26.3229 45.1718 26.1250 45.1718  c
25.9270 45.1718 25.7604 45.1041 25.6250 44.9687  c
25.4895 44.8333 25.4218 44.6666 25.4218 44.4687  c
25.4218 44.2708 25.4895 44.1041 25.6250 43.9687  c
25.7604 43.8333 25.9270 43.7656 26.1250 43.7656  c
h
33.7968 41.8281 m
33.7968 42.7343 l
32.6406 42.7343 l
32.6406 45.0000 l
31.5937 45.0000 l
31.5937 42.7343 l
27.9531 42.7343 l
27.9531 41.9218 l
31.9531 36.2187 l
32.6406 36.2187 l
32.6406 41.8281 l
33.7968 41.8281 l
h
31.5937 41.8281 m
31.5937 37.5468 l
28.5781 41.8281 l
31.5937 41.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 313.327 m
34.0000 313.327 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 233.980 m
34.0000 233.980 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 154.634 m
34.0000 154.634 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
0 J
1 j
newpath
36.0000 75.2887 m
34.0000 75.2887 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
1.50000 w
0 J
1 j
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
0 0 0 RG
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
